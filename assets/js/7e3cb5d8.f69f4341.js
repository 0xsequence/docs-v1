"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6723],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(h,l(l({ref:t},p),{},{components:n})):a.createElement(h,l({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=d;var r={};for(var c in t)hasOwnProperty.call(t,c)&&(r[c]=t[c]);r.originalType=e,r.mdxType="string"==typeof e?e:o,l[1]=r;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5930:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return r},metadata:function(){return s},toc:function(){return u}});var a=n(7462),o=n(3366),i=(n(7294),n(3905)),l=["components"],r={},c="Connect Wallet",s={unversionedId:"build-with-sequence/connect-wallet",id:"build-with-sequence/connect-wallet",title:"Connect Wallet",description:"Sequence is a very flexible wallet which allow users multiple ways to connect / access their wallet. This includes:",source:"@site/docs/build-with-sequence/02-connect-wallet.mdx",sourceDirName:"build-with-sequence",slug:"/build-with-sequence/connect-wallet",permalink:"/build-with-sequence/connect-wallet",editUrl:"https://github.com/0xsequence/docs/edit/master/docs/build-with-sequence/02-connect-wallet.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"sidebar",previous:{title:"Installation",permalink:"/build-with-sequence/installation"},next:{title:"Get Wallet Account Address",permalink:"/build-with-sequence/get-address"}},p={},u=[{value:"Connecting your dapp with <code>0xsequence</code>",id:"connecting-your-dapp-with-0xsequence",level:2},{value:"Connecting your dapp with <code>web3.js</code> or <code>ethers.js</code>",id:"connecting-your-dapp-with-web3js-or-ethersjs",level:2},{value:"Connecting to any Ethereum dapp with the Sequence Wallet Chrome Extension",id:"connecting-to-any-ethereum-dapp-with-the-sequence-wallet-chrome-extension",level:2},{value:"Connecting via <code>WalletConnect</code>",id:"connecting-via-walletconnect",level:2}],d={toc:u};function m(e){var t=e.components,r=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"connect-wallet"},"Connect Wallet"),(0,i.kt)("p",null,"Sequence is a very flexible wallet which allow users multiple ways to connect / access their wallet. This includes:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"On-demand Ethereum web wallet for new users")," via ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/0xsequence"},"0xsequence")," npm package + ",(0,i.kt)("a",{parentName:"p",href:"https://sequence.app"},"https://sequence.app")," -- this option allows\ndevelopers to offer users an on-demand Web3 wallet. No user install required -- any browser will ",(0,i.kt)("em",{parentName:"p"},"just work"),", and users\ncan on-boarding with a familiar Web2 experience. Think of it like ",(0,i.kt)("em",{parentName:"p"},"Paypal / Stripe but for Web3"),". ")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Surf all of Web3")," via ",(0,i.kt)("a",{parentName:"p",href:"https://chrome.google.com/webstore/detail/sequence-wallet/ocmccklecaalljlflmclidjeclpcpdim?hl=en"},"Sequence Wallet Chrome Extension")," -- users\nwho have the Sequence Wallet Chrome Extension installed are able to access any Ethereum-compatible Dapp on the Web :) Just like how MetaMask works,\nbut of course with a bunch of the benefits of Sequence.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Mobile phone access")," via ",(0,i.kt)("a",{parentName:"p",href:"https://walletconnect.com/"},"WalletConnect")," support within Sequence Wallet -- users are able to communicate with their wallets remotely\nvia the awesome Wallet Connect protocol. This is an excellent option if using Sequence Wallet from your mobile phone and want to connect\nyour wallet to a desktop dapp."))),(0,i.kt)("p",null,"Sequence Wallet is built on Web Browser (W3C) and Ethereum Web3 standards -- and is available everywhere that a modern browser is able to run.\nWe've carefully designed the wallet for simple on-boarding, while maintaining security for users, and allowing users to progressively\nincrease the level of their security through additional keys and measures."),(0,i.kt)("p",null,"This means, that if you've developed a dapp to work with MetaMask, then Sequence will work too without any changes. If you're\nusing web3.js or ethers.js, Sequence will just work too. This is the beauty of interoperability on web3 :D "),(0,i.kt)("h2",{id:"connecting-your-dapp-with-0xsequence"},"Connecting your dapp with ",(0,i.kt)("inlineCode",{parentName:"h2"},"0xsequence")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"A delightful wallet without requiring your users to install anything :)")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"By integrating ",(0,i.kt)("inlineCode",{parentName:"p"},"0xsequence"),", users may access your dapp without having to install any special extensions,\nand the wallet also works on mobile browsers!"))),(0,i.kt)("p",null,"Your dapp can connect to your user's wallet by first instantiating the Wallet provider:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { sequence } from '0xsequence'\n\n// This assumes your dapp runs on Ethereum mainnet\nconst wallet = new sequence.Wallet()\n\n// If your dapp runs on a different EVM-compatible blockchain, you can specify its name as the argument\n// const wallet = new sequence.Wallet('polygon')\n")),(0,i.kt)("p",null,"Once you have the instance, you can connect to the wallet:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'const connectDetails = await wallet.connect({\n  app: \'Your Dapp name\',\n  authorize: true\n  // And pass settings if you would like to customize further\n  settings: {\n    theme: "light",\n    includedPaymentProviders: ["moonpay", "ramp"],\n    defaultFundingCurrency: "matic",\n    lockFundingCurrencyToDefault: false,\n  }\n})\n\nconsole.log(\'user accepted connect?\', connectDetails.connected)\nconsole.log(\'users signed connect proof to valid their account address:\', connectDetails.proof)\n')),(0,i.kt)("p",null,"After you connect, you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"wallet.openWallet()")," to open the wallet:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"wallet.openWallet();\n")),(0,i.kt)("p",null,"You can also optionally pass a path, and use ",(0,i.kt)("inlineCode",{parentName:"p"},"openWithOptions")," intent to pass settings when you open the wallet:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'const settings: Settings = {\n  theme: "goldDark",\n  includedPaymentProviders: ["moonpay", "ramp"],\n  defaultFundingCurrency: "eth",\n  lockFundingCurrencyToDefault: false,\n};\nconst intent: OpenWalletIntent = {\n  type: "openWithOptions",\n  options: {\n    settings: settings,\n  },\n};\nconst path = "wallet/add-funds";\nwallet.openWallet(path, intent);\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Check out some example Dapp source code")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"For a complete examples, see ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/demo-dapp"},"Demo-Dapp")," and ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/demo-dapp-web3modal"},"Demo-Dapp-Web3Modal"),"."))),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Avoid Browsers Blocking Sequence Popup")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Most browsers will block popups if they are called outside of user-triggered event handlers like ",(0,i.kt)("inlineCode",{parentName:"p"},"onclick"),", or when it takes too long to process between the user action and the actual window "),(0,i.kt)("p",{parentName:"div"},"Read more about browser popup-blocking ",(0,i.kt)("a",{parentName:"p",href:"https://javascript.info/popup-windows#popup-blocking"},"here"),"."))),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Sequence on-demand sign in",src:n(9596).Z,width:"1479",height:"1051"})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Sequence on-demand sign in, connect",src:n(1752).Z,width:"1479",height:"1054"})),(0,i.kt)("h2",{id:"connecting-your-dapp-with-web3js-or-ethersjs"},"Connecting your dapp with ",(0,i.kt)("inlineCode",{parentName:"h2"},"web3.js")," or ",(0,i.kt)("inlineCode",{parentName:"h2"},"ethers.js")),(0,i.kt)("p",null,"For a full example of a dapp which supports Sequence (on-demand + chrome extension), Metamask, and WalletConnect\nplease see the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/demo-dapp-web3modal"},"Demo-Dapp-Web3Modal repo"),"."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Sequence Web3Modal Integration",src:n(1824).Z,width:"1444",height:"914"})),(0,i.kt)("h2",{id:"connecting-to-any-ethereum-dapp-with-the-sequence-wallet-chrome-extension"},"Connecting to any Ethereum dapp with the Sequence Wallet Chrome Extension"),(0,i.kt)("p",null,"Sequence Chrome Extension: ",(0,i.kt)("a",{parentName:"p",href:"https://chrome.google.com/webstore/detail/sequence-wallet/ocmccklecaalljlflmclidjeclpcpdim?hl=en"},"Install")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Sequence Chrome Extension",src:n(9424).Z,width:"1479",height:"1108"})),(0,i.kt)("h2",{id:"connecting-via-walletconnect"},"Connecting via ",(0,i.kt)("inlineCode",{parentName:"h2"},"WalletConnect")),(0,i.kt)("p",null,"Sequence already supports connecting to dapps via ",(0,i.kt)("a",{parentName:"p",href:"https://walletconnect.com"},"WalletConnect"),".\nIf your dapp already supports WalletConnect, and you don't need Sequence-specific functionality, nothing more needs to be done.\nFrom the user's perspective, the WalletConnect flow behaves as follows."),(0,i.kt)("p",null,"Taking ",(0,i.kt)("a",{parentName:"p",href:"https://app.uniswap.org"},"Uniswap")," as an example, the user is prompted to connect their wallet using one of multiple possible protocols."),(0,i.kt)("img",{src:"/img/walletconnect/connect-wallet.png"}),(0,i.kt)("p",null,"The user selects the WalletConnect option."),(0,i.kt)("img",{src:"/img/walletconnect/select-walletconnect.png"}),(0,i.kt)("p",null,"A QR code is displayed, which can be scanned by Sequence.\nAlternatively, the user can also choose to copy the connection details via their OS clipboard."),(0,i.kt)("img",{src:"/img/walletconnect/qr-code.png"}),(0,i.kt)("p",null,'Back in the Sequence interface, the user chooses "Scan".'),(0,i.kt)("img",{src:"/img/walletconnect/scan.png"}),(0,i.kt)("p",null,"The QR code from the dapp is scanned.\nAlternatively, the code is pasted from the OS clipboard if the user chose that previously."),(0,i.kt)("img",{src:"/img/walletconnect/scan-qr-code.png"}),(0,i.kt)("p",null,"The user confirms the connection request."),(0,i.kt)("img",{src:"/img/walletconnect/confirm.png"}),(0,i.kt)("p",null,"The connection succeeded, and the dapp is updated to reflect that."),(0,i.kt)("img",{src:"/img/walletconnect/success.png"}),(0,i.kt)("p",null,"While connected, the dapp is able to make signing requests to Sequence.\nSequence will always prompt for confirmation from the user for any activity initiated by the dapp."),(0,i.kt)("img",{src:"/img/walletconnect/activity.png"}),(0,i.kt)("p",null,"Once the user has finished using the dapp, they can disconnect the wallet via the session menu."),(0,i.kt)("img",{src:"/img/walletconnect/disconnect.png"}))}m.isMDXComponent=!0},9424:function(e,t,n){t.Z=n.p+"assets/images/seq-chrome-store-9334f18a83d3bfca818e3d3862d0156c.png"},1752:function(e,t,n){t.Z=n.p+"assets/images/sign-in-connect-d814bce59b1e77007fd8a492a8ad5958.png"},9596:function(e,t,n){t.Z=n.p+"assets/images/sign-in-fresh-e2c564971c5e89a4fd7c3ba03ca69ff0.png"},1824:function(e,t,n){t.Z=n.p+"assets/images/web3modal-e9639769538f42d9e60654eea840fd41.png"}}]);