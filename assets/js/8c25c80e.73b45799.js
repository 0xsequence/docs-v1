"use strict";(self.webpackChunk_0xsequence_docs=self.webpackChunk_0xsequence_docs||[]).push([[9575],{5029:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var t=r(1527),a=r(7279);const s={slug:"/relayer"},i="Relayer",o={id:"relayer/overview",title:"Relayer",description:"The Sequence Relayer service offers a simple interface for dispatching meta-transactions on Ethereum-compatible",source:"@site/docs/06-relayer/01-overview.mdx",sourceDirName:"06-relayer",slug:"/relayer",permalink:"/relayer",draft:!1,unlisted:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/06-relayer/01-overview.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/relayer"},sidebar:"sidebar",previous:{title:"REST API",permalink:"/metadata/rest-api"},next:{title:"Building a Relaying Server with Sequence",permalink:"/relayer/building-relaying-server"}},c={},l=[];function d(e){const n={em:"em",h1:"h1",li:"li",p:"p",ul:"ul",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"relayer",children:"Relayer"}),"\n",(0,t.jsx)(n.p,{children:"The Sequence Relayer service offers a simple interface for dispatching meta-transactions on Ethereum-compatible\nnetworks."}),"\n",(0,t.jsx)(n.p,{children:"Meta-transactions are the idea of a transaction inside of a transaction. The benefits of Sequence meta-transactions are\nthat they allow:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Gas abstraction -- whereby users can pay for network gas in a variety of tokens (ie. USDC, DAI, etc.)"}),"\n",(0,t.jsx)(n.li,{children:"Sponsored gas -- projects may sponsor the gas of specific contracts to allow free gas for their users"}),"\n",(0,t.jsx)(n.li,{children:"Batched transactions -- group a bunch of independent transactions and allow them to be mined as a single transaction"}),"\n",(0,t.jsx)(n.li,{children:"Parallel transactions -- parallelize the dispatch of transactions in some cases"}),"\n",(0,t.jsx)(n.li,{children:"Fire + forget model -- easily send transactions to the relayer, which will ensure fast delivery"}),"\n",(0,t.jsx)(n.li,{children:"Optimal gas pricing for transactions"}),"\n",(0,t.jsx)(n.li,{children:"Free to use / Sequence Pro gives you more reporting"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The best part: transactions with Sequence Relayer are compatible with ",(0,t.jsx)(n.em,{children:"any"})," existing/deployed Ethereum\ncontract, and thus, integrating the Sequence Relayer doesn't require any changes to your contracts or dapp."]}),"\n",(0,t.jsx)(n.p,{children:"The Sequence Relayer is usable by frontend dapps, or even in your backends."})]})}function u(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},7279:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>i});var t=r(959);const a={},s=t.createContext(a);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);