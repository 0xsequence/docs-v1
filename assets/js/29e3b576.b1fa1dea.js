"use strict";(self.webpackChunk_0xsequence_docs=self.webpackChunk_0xsequence_docs||[]).push([[3641],{8291:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>a});var o=t(1527),s=t(7279);const i={},r="Setup",c={id:"unreal-waas-sdk/setup",title:"Setup",description:"1) Once you have the the SequencePlugin folder, you'll need to go to your project directory and create a Plugins folder in it, then copy over the SequencePlugin folder into the Plugins folder. If a Plugins folder already exists just copy the SequencePlugin folder into it.",source:"@site/docs/130-unreal-waas-sdk/03-setup.mdx",sourceDirName:"130-unreal-waas-sdk",slug:"/unreal-waas-sdk/setup",permalink:"/unreal-waas-sdk/setup",draft:!1,unlisted:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/130-unreal-waas-sdk/03-setup.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"sidebar",previous:{title:"Installation",permalink:"/unreal-waas-sdk/installation"},next:{title:"Authentication",permalink:"/unreal-waas-sdk/authentication"}},l={},a=[];function d(e){const n={code:"code",h1:"h1",li:"li",ol:"ol",p:"p",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"setup",children:"Setup"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Once you have the the ",(0,o.jsx)(n.code,{children:"SequencePlugin"})," folder, you'll need to go to your project directory and create a ",(0,o.jsx)(n.code,{children:"Plugins"})," folder in it, then copy over the ",(0,o.jsx)(n.code,{children:"SequencePlugin"})," folder into the ",(0,o.jsx)(n.code,{children:"Plugins"})," folder. If a ",(0,o.jsx)(n.code,{children:"Plugins"})," folder already exists just copy the ",(0,o.jsx)(n.code,{children:"SequencePlugin"})," folder into it."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Launch your project, then allow it to update the UProject Settings."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["To find the ",(0,o.jsx)(n.code,{children:"SequencePlugin"})," content folder in your content drawer enable view plugin content"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["If you wish to use the in built sequence UI for login\na) Create an ",(0,o.jsx)(n.code,{children:"[Actor]"})," you wish to be responsible for the SequenceUI then attach the ",(0,o.jsx)(n.code,{children:"[Sequence_Pawn_Component_BP]"})," to it\nb) Setup your ",(0,o.jsx)(n.code,{children:"[Actor]"})," Blueprint similar to how it's setup in ",(0,o.jsx)(n.code,{children:"[Custom_Spectator_Pawn]"})," being sure to bind to the delegate that gives you Credentials ",(0,o.jsx)(n.code,{children:"[Auth_Success_Forwarder]"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Once you have those credentials you'll need to forward them to your own C++ backend in order to use the Sequence API, an example of this can be found in the ",(0,o.jsx)(n.code,{children:"[Custom_Spectator_Pawn]"}),". This Pawn inherits from a C++ class ",(0,o.jsx)(n.code,{children:"[Sqnc_Spec_Pawn]"}),", which implements a blueprint Callable function ",(0,o.jsx)(n.code,{children:"[SetupCredentials(FCredentials_BE CredentialsIn)]"}),". This is callable within the child class ",(0,o.jsx)(n.code,{children:"[Custom_Spectator_Pawn]"}),". Calling this function will forward the credentials to a C++ backend."]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},7279:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>r});var o=t(959);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);