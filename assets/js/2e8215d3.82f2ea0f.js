"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3965],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>f});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),c=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},p=function(e){var r=c(e.components);return n.createElement(l.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},y=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),y=c(t),f=a,m=y["".concat(l,".").concat(f)]||y[f]||u[f]||i;return t?n.createElement(m,o(o({ref:r},p),{},{components:t})):n.createElement(m,o({ref:r},p))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=y;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},948:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=t(7462),a=(t(7294),t(3905));const i={slug:"/relayer"},o="Relayer",s={unversionedId:"relayer/overview",id:"relayer/overview",title:"Relayer",description:"The Sequence Relayer service offers a simple interface for dispatching meta-transactions on Ethereum-compatible",source:"@site/docs/05-relayer/01-overview.mdx",sourceDirName:"05-relayer",slug:"/relayer",permalink:"/relayer",draft:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/05-relayer/01-overview.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/relayer"},sidebar:"sidebar",previous:{title:"API Usage",permalink:"/metadata/api-usage"},next:{title:"Building Relaying Server with Sequence",permalink:"/relayer/building-relaying-server"}},l={},c=[{value:"Pricing &amp; Usage",id:"pricing--usage",level:2}],p={toc:c};function u(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"relayer"},"Relayer"),(0,a.kt)("p",null,"The Sequence Relayer service offers a simple interface for dispatching meta-transactions on Ethereum-compatible\nnetworks."),(0,a.kt)("p",null,"Meta-transactions are the idea of a transaction inside of a transaction. The benefits of Sequence meta-transactions are\nthat they allow:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Gas abstraction -- whereby users can pay for network gas in a variety of tokens (ie. USDC, DAI, etc.)"),(0,a.kt)("li",{parentName:"ul"},"Sponsored gas -- projects may sponsor the gas of specific contracts to allow free gas for their users"),(0,a.kt)("li",{parentName:"ul"},"Batched transactions -- group a bunch of independent transactions and allow them to be mined as a single transaction"),(0,a.kt)("li",{parentName:"ul"},"Parallel transactions -- parallelize the dispatch of transactions in some cases"),(0,a.kt)("li",{parentName:"ul"},"Fire + forget model -- easily send transactions to the relayer, which will ensure fast delivery"),(0,a.kt)("li",{parentName:"ul"},"Optimal gas pricing for transactions"),(0,a.kt)("li",{parentName:"ul"},"Free to use / Sequence Pro gives you more reporting")),(0,a.kt)("p",null,"The best part: transactions with Sequence Relayer are compatible with ",(0,a.kt)("em",{parentName:"p"},"any")," existing/deployed Ethereum\ncontract, and thus, integrating the Sequence Relayer doesn't require any changes to your contracts or dapp."),(0,a.kt)("p",null,"The Sequence Relayer is usable by frontend dapps, or even in your backends."),(0,a.kt)("h2",{id:"pricing--usage"},"Pricing & Usage"),(0,a.kt)("p",null,"The Sequence Relayer is available for free, but if your project requires higher concurrency,\nplease contact the ",(0,a.kt)("a",{parentName:"p",href:"https://pro.sequence.xyz"},"Sequence Pro")," team."))}u.isMDXComponent=!0}}]);