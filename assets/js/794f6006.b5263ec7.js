"use strict";(self.webpackChunk_0xsequence_docs=self.webpackChunk_0xsequence_docs||[]).push([[3580],{2856:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>r});var t=i(1527),a=i(7279);const s={},o=void 0,c={id:"unreal-waas-sdk/authentication",title:"authentication",description:"Authentication",source:"@site/docs/130-unreal-waas-sdk/04-authentication.mdx",sourceDirName:"130-unreal-waas-sdk",slug:"/unreal-waas-sdk/authentication",permalink:"/unreal-waas-sdk/authentication",draft:!1,unlisted:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/130-unreal-waas-sdk/04-authentication.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"sidebar",previous:{title:"Setup",permalink:"/unreal-waas-sdk/setup"},next:{title:"api-integration",permalink:"/unreal-waas-sdk/api-integration"}},l={},r=[{value:"Authentication",id:"authentication",level:2},{value:"Custom UI Integration",id:"custom-ui-integration",level:3},{value:"Email based Authentication",id:"email-based-authentication",level:3},{value:"Social Signin based Authentication on Desktop",id:"social-signin-based-authentication-on-desktop",level:3},{value:"Social Signin based Authentication on Mobile",id:"social-signin-based-authentication-on-mobile",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,t.jsx)(n.h3,{id:"custom-ui-integration",children:"Custom UI Integration"}),"\n",(0,t.jsxs)(n.p,{children:["In a C++ backend with a series of pass through ",(0,t.jsx)(n.code,{children:"[UFUNCTIONS]"})," setup similarly to ",(0,t.jsx)(n.code,{children:"[SequenceBackendManager.h/.cpp]"}),". Each of these calls are implemented in ",(0,t.jsx)(n.code,{children:"[UAuthenticator]"})," you just need to pass through the data with YOUR UAuthenticator UObject"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-clike",children:'//This call is platform dependent on windows & mac this is required for SSO WIP\nUFUNCTION(BlueprintCallable, CATEGORY = "Login")\nFString GetLoginURL(const ESocialSigninType& Type); \n\n//This Call is made after you\'ve collected the ID_Token (Mac & Windows only) WIP\nUFUNCTION(BlueprintCallable, CATEGORY = "Login")\nvoid SocialLogin(const FString& IDTokenIn);\n\n//This Call is made after you\'ve collected the email address from the Users in the UI\nUFUNCTION(BlueprintCallable, CATEGORY = "Login")\nvoid EmailLogin(const FString& EmailIn);\n\n//This is call is made after the Delegate `[AuthRequiresCode]` is fired\nUFUNCTION(BlueprintCallable, CATEGORY = "Login")\nvoid EmailCode(const FString& CodeIn);\n\n//Optional call used to check if the credentials on disk are valid or not//\nUFUNCTION(BlueprintCallable, Category = "Login")\nbool StoredCredentialsValid();\n'})}),"\n",(0,t.jsxs)(n.p,{children:["To start you'll want to create a ",(0,t.jsx)(n.code,{children:"[UAuthenticator]"})," UObject like so ",(0,t.jsx)(n.code,{children:"[UAuthenticator + Auth = NewObject<UAuthenticator>()]"}),", this UObject manages the authentication side of Sequence."]}),"\n",(0,t.jsxs)(n.p,{children:["Be sure to bind to the Delegates for ",(0,t.jsx)(n.code,{children:"[AuthSuccess]"}),", ",(0,t.jsx)(n.code,{children:"[AuthFailure]"}),", ",(0,t.jsx)(n.code,{children:"[AuthRequiresCode]"})," prior to making any signin calls You can bind to these delegates like so:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-clike",children:"this->authenticator->AuthRequiresCode.AddDynamic(this, &AYourClass::YourCallReadyToReceiveCode);\nthis->authenticator->AuthFailure.AddDynamic(this, &AYourClass::YourCallShowAuthFailureScreen);\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In the case of ",(0,t.jsx)(n.code,{children:"[AuthSuccess]"})," since a parameter is also passed we bind to it like this"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-clike",children:'FScriptDelegate del;\ndel.BindUFunction(this, "CallShowAuthSuccessScreen");\nthis->authenticator->AuthSuccess.Add(del);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Where ",(0,t.jsx)(n.code,{children:"[CallShowAuthSuccessScreen]"})," is defined in ",(0,t.jsx)(n.code,{children:"SequenceBackendManager.h"})," like so:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-clike",children:"UFUNCTION()\nvoid CallShowAuthSuccessScreen(const FCredentials_BE& CredentialsIn);\n"})}),"\n",(0,t.jsxs)(n.p,{children:["And in ",(0,t.jsx)(n.code,{children:"SequenceBackendManager.cpp"})," like so:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-clike",children:'void ASequenceBackendManager::CallShowAuthSuccessScreen(const FCredentials_BE& CredentialsIn) \n{\nthis->Credentials = CredentialsIn;\nif (this->ShowAuthSuccessDelegate.IsBound())\n  this->ShowAuthSuccessDelegate.Broadcast(Credentials);\nelse\n  UE_LOG(LogTemp, Error, TEXT("`[Nothing bound to: ShowAuthSuccessDelegate]`"));\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"email-based-authentication",children:"Email based Authentication"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["To start email based authentication you'll start it with this call ",(0,t.jsx)(n.code,{children:"[EmailLogin(const FString& EmailIn)]"}),", supplying an email you've collected from the User in your GUI."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Next ",(0,t.jsx)(n.code,{children:"[AuthRequiresCode]"})," will fire when the backend is ready to receive the Code from your UI. Collect this code from your GUI and send it to the authenticator using ",(0,t.jsx)(n.code,{children:"[EmailCode(CodeIn)]"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Finally ",(0,t.jsx)(n.code,{children:"[AuthSuccess]"})," will fire with a Credentials_BE struct as a parameter. This is your non registered credentials from EmailAuth. You are done Email Based Auth."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"social-signin-based-authentication-on-desktop",children:"Social Signin based Authentication on Desktop"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"To start SSO based authentication with desktop you can either use your own implementation to get the necessary id_token or you can make use of Unreal's web browser plugin."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["With whatever implementation you chose you can forward the colleted id_token to the UAuthenticator object with ",(0,t.jsx)(n.code,{children:"[SocialLogin(const FString& IDTokenIn)]"}),", after which ",(0,t.jsx)(n.code,{children:"[AuthSuccess]"})," will fire and you're done desktop based SSO."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"social-signin-based-authentication-on-mobile",children:"Social Signin based Authentication on Mobile"}),"\n",(0,t.jsx)(n.p,{children:"WIP"})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},7279:(e,n,i)=>{i.d(n,{Z:()=>c,a:()=>o});var t=i(959);const a={},s=t.createContext(a);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);