"use strict";(self.webpackChunk_0xsequence_docs=self.webpackChunk_0xsequence_docs||[]).push([[7929],{9450:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>x,frontMatter:()=>c,metadata:()=>o,toc:()=>u});var a=t(1527),s=t(7279),r=t(370),l=t(1804);const c={},i="Indexer SDK",o={id:"unity-sdk/indexer/guides",title:"Indexer SDK",description:"Our stack is now managed through Sequence Builder. Sign up to grab your API access key.",source:"@site/docs/355-unity-sdk/24-indexer/02-guides.mdx",sourceDirName:"355-unity-sdk/24-indexer",slug:"/unity-sdk/indexer/guides",permalink:"/unity-sdk/indexer/guides",draft:!1,unlisted:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/355-unity-sdk/24-indexer/02-guides.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"sidebar",previous:{title:"ERC20",permalink:"/unity-sdk/wallet/ERC20"},next:{title:"Getting Started",permalink:"/getting-started"}},d={},u=[{value:"Installation",id:"installation",level:2},{value:"Tokens API",id:"tokens-api",level:2},{value:"Fetch token IDs, balances and metadata of ERC721 and ERC1155 collections.",id:"fetch-token-ids-balances-and-metadata-of-erc721-and-erc1155-collections",level:3},{value:"Fetch the transaction history for any wallet address",id:"fetch-the-transaction-history-for-any-wallet-address",level:3},{value:"Fetch all unique tokens in a particular ERC20/721/1155 contract, including total supplies",id:"fetch-all-unique-tokens-in-a-particular-erc207211155-contract-including-total-supplies",level:3},{value:"Fetch the transaction history for any token contract address",id:"fetch-the-transaction-history-for-any-token-contract-address",level:3},{value:"Fetch native network balance (aka ETH on Ethereum, MATIC on Polygon, AVAX on Avalanche, BNB on BSC, etc.)",id:"fetch-native-network-balance-aka-eth-on-ethereum-matic-on-polygon-avax-on-avalanche-bnb-on-bsc-etc",level:3},{value:"Fetch the chain ID",id:"fetch-the-chain-id",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"indexer-sdk",children:"Indexer SDK"}),"\n",(0,a.jsxs)(n.admonition,{type:"warning",children:[(0,a.jsxs)(n.mdxAdmonitionTitle,{children:["INTRODUCING THE SEQUENCE BUILDER - ",(0,a.jsx)(n.a,{href:"https://sequence.build",children:"https://sequence.build"})]}),(0,a.jsxs)(n.p,{children:["Our stack is now managed through ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"https://sequence.build",children:"Sequence Builder"})}),". Sign up to grab your API access key."]}),(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.a,{href:"https://sequence.build",children:["Get started with the ",(0,a.jsx)(n.strong,{children:"Sequence Builder"})," Free Plan today!"]})})]}),"\n",(0,a.jsxs)(n.p,{children:["Native Unity Implementation of ",(0,a.jsx)(n.a,{href:"/indexer",children:"Sequence Indexer"})]}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:(0,a.jsx)(n.a,{href:"/unity-sdk/installation",children:"Installation"})}),"\n",(0,a.jsx)(n.h2,{id:"tokens-api",children:"Tokens API"}),"\n",(0,a.jsx)(n.h3,{id:"fetch-token-ids-balances-and-metadata-of-erc721-and-erc1155-collections",children:"Fetch token IDs, balances and metadata of ERC721 and ERC1155 collections."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.em,{children:["Sequence Indexer ",(0,a.jsx)(n.code,{children:"GetTokenBalances"})," Method:"]})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Request: POST /rpc/Indexer/GetTokenBalances"}),"\n",(0,a.jsx)(n.li,{children:"Content-Type: application/json"}),"\n",(0,a.jsxs)(n.li,{children:["Body (in JSON):","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"accountAddress"})," (string) -- the wallet account address"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"contractAddress"})," (string) -- the contract address of the ERC721 / ERC1155 collection"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"includeMetadata"})," (boolean - optional - default: false) -- toggle token metadata to be included in the response"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.strong,{children:["Example: ",(0,a.jsx)(n.code,{children:"GetTokenBalances"})," of a contract + account address on Polygon"]})}),"\n",(0,a.jsx)(r.Z,{children:(0,a.jsx)(l.Z,{value:"csharp",label:"Unity C#",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:"GetTokenBalancesArgs tokenBalancesArgs = new GetTokenBalancesArgs(accountAddress, contractAddress, true);\nvar tokenBalances = await Indexer.GetTokenBalances(blockChain, tokenBalancesArgs);\nif (tokenBalances.balances.Length > 0)\n{\n    //Display the balances :)\n}\n"})})})}),"\n",(0,a.jsx)(n.h3,{id:"fetch-the-transaction-history-for-any-wallet-address",children:"Fetch the transaction history for any wallet address"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Fetches the transaction / token history for any wallet address of any ERC20, ERC721 and ERC1155 token.\nThe response includes decoded transaction details for easy consumption / rendering."})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.em,{children:["Sequence Indexer ",(0,a.jsx)(n.code,{children:"GetTransactionHistory"})," Method:"]})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Request: POST /rpc/Indexer/GetTransactionHistory"}),"\n",(0,a.jsx)(n.li,{children:"Content-Type: application/json"}),"\n",(0,a.jsxs)(n.li,{children:["Body (in JSON):","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"filter"})," (object)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"accountAddress"})," (string) -- the wallet account address","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"contractAddress"})," (string) -- optionally specify a contract address to filter"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"includeMetadata"})," (boolean - optional - default: false) -- toggle token metadata to be included in the response"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.strong,{children:["Example: ",(0,a.jsx)(n.code,{children:"GetTransactionHistory"})," of a wallet account address on Polygon"]})}),"\n",(0,a.jsx)(r.Z,{children:(0,a.jsx)(l.Z,{value:"cs",label:"Unity C#",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:"GetTransactionHistoryArgs transactionHistoryArgs = new GetTransactionHistoryArgs();\nvar txHistory = await Indexer.GetTransactionHistory(blockChain, transactionHistoryArgs);\n//Display tx history :)\n"})})})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.h3,{id:"fetch-all-unique-tokens-in-a-particular-erc207211155-contract-including-total-supplies",children:"Fetch all unique tokens in a particular ERC20/721/1155 contract, including total supplies"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Fetches token supplies and metadata for any ERC20, ERC721, ERC1155 contract."})}),"\n",(0,a.jsx)(n.p,{children:"This query is helpful to render all tokens in a token contract, or to query the total token supplies.\nIn this example, we use the Skyweaver token contract address 0x631998e91476DA5B870D741192fc5Cbc55F5a52E\non the Polygon network. You may query any contract address on any of the supported networks (but make\nsure to query the indexer of the corresponding network)."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.em,{children:["Sequence Indexer ",(0,a.jsx)(n.code,{children:"GetTokenSupplies"})," Method:"]})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Request: POST /rpc/Indexer/GetTokenSupplies"}),"\n",(0,a.jsx)(n.li,{children:"Content-Type: application/json"}),"\n",(0,a.jsxs)(n.li,{children:["Body (in JSON):","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"contractAddress"})," (string) -- a ERC20 / ERC721 / ERC1155 contract address"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"includeMetadata"})," (boolean - optional - default: false) -- toggle token metadata to be included in the response"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.strong,{children:["Example: ",(0,a.jsx)(n.code,{children:"GetTokenSupplies"})," of Skyweaver contract on Polygon"]})}),"\n",(0,a.jsx)(r.Z,{children:(0,a.jsx)(l.Z,{value:"cs",label:"Unity C#",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:"GetTokenSuppliesArgs tokenSuppliesArgs = new GetTokenSuppliesArgs(contractAddress, includeMetadata);\nvar supplies = await Indexer.GetTokenSupplies(blockChain, tokenSuppliesArgs);\nif (supplies != null)\n{\n    //Display supplies :)\n}\n\n"})})})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.h3,{id:"fetch-the-transaction-history-for-any-token-contract-address",children:"Fetch the transaction history for any token contract address"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Fetch / listen to the transaction history for any ERC20, ERC721, ERC1155 contract."})}),"\n",(0,a.jsx)(n.p,{children:"This query is helpful to track transaction history of a particular token contract.\nIn this example, we use the Skyweaver token contract address 0x631998e91476DA5B870D741192fc5Cbc55F5a52E\non the Polygon network. You may query any contract address on any of the supported networks (but make\nsure to query the indexer of the corresponding network)."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.em,{children:["Sequence Indexer ",(0,a.jsx)(n.code,{children:"GetBalanceUpdates"})," Method:"]})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Request: POST /rpc/Indexer/GetBalanceUpdates"}),"\n",(0,a.jsx)(n.li,{children:"Content-Type: application/json"}),"\n",(0,a.jsxs)(n.li,{children:["Body (in JSON):","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"contractAddress"})," (string) -- a ERC20 / ERC721 / ERC1155 contract address"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.strong,{children:["Example: ",(0,a.jsx)(n.code,{children:"GetBalanceUpdates"})," of Skyweaver contract on Polygon"]})}),"\n",(0,a.jsx)(r.Z,{children:(0,a.jsx)(l.Z,{value:"cs",label:"Unity C#",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:"GetBalanceUpdatesArgs balanceUpdatesArgs = new GetBalanceUpdateArgs(contractAddress);\nvar updates = await Indexer.GetBalanceUpdates(blockChain, balanceUpdatesArgs);\nif (updates != null)\n{\n    //Display balance updates :)\n}\n\n"})})})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.h3,{id:"fetch-native-network-balance-aka-eth-on-ethereum-matic-on-polygon-avax-on-avalanche-bnb-on-bsc-etc",children:"Fetch native network balance (aka ETH on Ethereum, MATIC on Polygon, AVAX on Avalanche, BNB on BSC, etc.)"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.em,{children:["Sequence Indexer ",(0,a.jsx)(n.code,{children:"GetEtherBalance"})," Method:"]})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Request: POST /rpc/Indexer/GetEtherBalance"}),"\n",(0,a.jsx)(n.li,{children:"Content-Type: application/json"}),"\n",(0,a.jsxs)(n.li,{children:["Body (in JSON):","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"accountAddress"})," (string) -- the wallet account address"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.strong,{children:["Example: ",(0,a.jsx)(n.code,{children:"GetEtherBalance"})," MATIC balance of a wallet account address on Polygon"]})}),"\n",(0,a.jsx)(r.Z,{children:(0,a.jsx)(l.Z,{value:"cs",label:"Unity C#",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:"GetEtherBalanceArgs etherBalanceArgs = new GetEtherBalanceArgs(accountAddress);\nvar etherBalance = await Indexer.GetEtherBalance(blockChain, etherBalanceArgs);\nif (etherBalance != null)\n{\n    //Display ether balance :)\n}\n\n"})})})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.h3,{id:"fetch-the-chain-id",children:"Fetch the chain ID"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.em,{children:["Sequence Indexer ",(0,a.jsx)(n.code,{children:"GetChainID"})," Method:"]})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Request: POST /rpc/Indexer/GetChainID"}),"\n",(0,a.jsx)(n.li,{children:"Content-Type: application/json"}),"\n"]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(r.Z,{children:(0,a.jsx)(l.Z,{value:"cs",label:"Unity C#",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:"\nvar chainId = await Indexer.GetChainID(BlockChainType.Polygon);\nif (getChainIDReturn != null)\n{\n    //Display\n}\n"})})})})]})}function x(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},1804:(e,n,t)=>{t.d(n,{Z:()=>l});t(959);var a=t(5924);const s={tabItem:"tabItem_l_5p"};var r=t(1527);function l(e){let{children:n,hidden:t,className:l}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.Z)(s.tabItem,l),hidden:t,children:n})}},370:(e,n,t)=>{t.d(n,{Z:()=>v});var a=t(959),s=t(5924),r=t(74),l=t(8903),c=t(331),i=t(4053),o=t(3608),d=t(7979);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:s}}=e;return{value:n,label:t,attributes:a,default:s}}))}(t);return function(e){const n=(0,o.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function x(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:t}=e;const s=(0,l.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,i._X)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function j(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=h(e),[l,i]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!x({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[o,u]=p({queryString:t,groupId:s}),[j,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,r]=(0,d.Nk)(t);return[s,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:s}),y=(()=>{const e=o??j;return x({value:e,tabValues:r})?e:null})();(0,c.Z)((()=>{y&&i(y)}),[y]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!x({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),f(e)}),[u,f,r]),tabValues:r}}var f=t(9506);const y={tabList:"tabList_Pq82",tabItem:"tabItem_kpXA"};var g=t(1527);function b(e){let{className:n,block:t,selectedValue:a,selectValue:l,tabValues:c}=e;const i=[],{blockElementScrollPositionUntilNextRender:o}=(0,r.o5)(),d=e=>{const n=e.currentTarget,t=i.indexOf(n),s=c[t].value;s!==a&&(o(n),l(s))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},n),children:c.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>i.push(e),onKeyDown:u,onClick:d,...r,className:(0,s.Z)("tabs__item",y.tabItem,r?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function m(e){let{lazy:n,children:t,selectedValue:s}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function k(e){const n=j(e);return(0,g.jsxs)("div",{className:(0,s.Z)("tabs-container",y.tabList),children:[(0,g.jsx)(b,{...e,...n}),(0,g.jsx)(m,{...e,...n})]})}function v(e){const n=(0,f.Z)();return(0,g.jsx)(k,{...e,children:u(e.children)},String(n))}},7279:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>l});var a=t(959);const s={},r=a.createContext(s);function l(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);