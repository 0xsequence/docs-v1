"use strict";(self.webpackChunk_0xsequence_docs=self.webpackChunk_0xsequence_docs||[]).push([[2101],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>y});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},i=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),d=p(n),u=o,y=d["".concat(c,".").concat(u)]||d[u]||f[u]||r;return n?a.createElement(y,l(l({ref:t},i),{},{components:n})):a.createElement(y,l({ref:t},i))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:o,l[1]=s;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2817:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const r={},l="Universal Deployer",s={unversionedId:"wallet/wallet-contracts/universal-deployer",id:"wallet/wallet-contracts/universal-deployer",title:"Universal Deployer",description:"The Sequence contract wallets use Nick's method to deploy the contracts that compose the smart contract wallet.",source:"@site/docs/03-wallet/10-wallet-contracts/02-universal-deployer.mdx",sourceDirName:"03-wallet/10-wallet-contracts",slug:"/wallet/wallet-contracts/universal-deployer",permalink:"/wallet/wallet-contracts/universal-deployer",draft:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/03-wallet/10-wallet-contracts/02-universal-deployer.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"sidebar",previous:{title:"Why smart contracts wallets?",permalink:"/wallet/wallet-contracts/why"},next:{title:"Wallet Factory",permalink:"/wallet/wallet-contracts/wallet-factory"}},c={},p=[{value:"Deploy Process V2",id:"deploy-process-v2",level:2},{value:"1 - Deploy Singleton Factory",id:"1---deploy-singleton-factory",level:3},{value:"2 - Deploy Wallet Context",id:"2---deploy-wallet-context",level:3},{value:"Deploy Process V1",id:"deploy-process-v1",level:2},{value:"1 - Deploy NanoUniversalDeployer",id:"1---deploy-nanouniversaldeployer",level:3},{value:"2 - Deploy UniversalDeployer2",id:"2---deploy-universaldeployer2",level:3},{value:"3 - Deploy Wallet Context",id:"3---deploy-wallet-context",level:3}],i={toc:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"universal-deployer"},"Universal Deployer"),(0,o.kt)("p",null,"The Sequence contract wallets use ",(0,o.kt)("a",{parentName:"p",href:"https://weka.medium.com/how-to-send-ether-to-11-440-people-187e332566b7"},"Nick's method")," to deploy the contracts that compose the smart contract wallet.\nThis method has been chosen because it allows each wallet to take the same address on multiple chains, making it easier to use and less prone to mistakes."),(0,o.kt)("admonition",{title:"Limitations",type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"Sequence wallets ",(0,o.kt)("strong",{parentName:"p"},"may not")," receive the same address on all EVM compatible chains."),(0,o.kt)("p",{parentName:"admonition"},"Networks that implement only a subset of the EVM opcodes, or alternative virtual machines, will result in a different address for each chain."),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"Double-check your addresses")," before sending any assets to them.")),(0,o.kt)("admonition",{title:"Notice",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"A complete script for deployment can be found in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/live-contracts"},"Sequence Live Contracts repository"),".")),(0,o.kt)("h2",{id:"deploy-process-v2"},"Deploy Process V2"),(0,o.kt)("p",null,"The following steps are required to deploy the ",(0,o.kt)("a",{parentName:"p",href:"./wallet-context"},"Sequence Wallet Context")," on a new network."),(0,o.kt)("admonition",{title:"Notice",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"For most popular networks this process ",(0,o.kt)("strong",{parentName:"p"},"is not")," required; due to the wallet contracts being already deployed."),(0,o.kt)("p",{parentName:"admonition"},"To see if a configuration already exists for a given chain go to ",(0,o.kt)("a",{parentName:"p",href:"/multi-chain-support#networks"},"Networks"),".")),(0,o.kt)("h3",{id:"1---deploy-singleton-factory"},"1 - Deploy Singleton Factory"),(0,o.kt)("p",null,"The Singleton Factory is a contract that allows the deployment of a single contract instance per address. Unlike the\n",(0,o.kt)("a",{parentName:"p",href:"#universal-deployer"},"Universal Deployer"),", the Singleton Factory requires a salt to manage deployment instances. More information about the\nSingleton Factory can be found in the ",(0,o.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-2470"},"EIP-2470 specification"),"."),(0,o.kt)("p",null,"The Pre-fund the Singleton Factory's deployer with the required funds to deploy the contract."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Address: 0xBb6e024b9cFFACB947A71991E386681B1Cd1477D\nFunds: 0.0247\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Do not send additional funds to the address, as funds can't be refunded.")),(0,o.kt)("p",null,"Once the address is funded, you can deploy the Singleton Factory by executing the following pre-signed transaction:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"0xf9016c8085174876e8008303c4d88080b90154608060405234801561001057600080fd5b50610134806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80634af63f0214602d575b600080fd5b60cf60048036036040811015604157600080fd5b810190602081018135640100000000811115605b57600080fd5b820183602082011115606c57600080fd5b80359060200191846001830284011164010000000083111715608d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550509135925060eb915050565b604080516001600160a01b039092168252519081900360200190f35b6000818351602085016000f5939250505056fea26469706673582212206b44f8a82cb6b156bfcc3dc6aadd6df4eefd204bc928a4397fd15dacf6d5320564736f6c634300060200331b83247000822470\n")),(0,o.kt)("p",null,"After the transaction is confirmed, you should see the address of the Singleton Factory:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Singleton Deployer: 0xce0042B868300000d44A59004Da54A005ffdcf9f\n")),(0,o.kt)("h3",{id:"2---deploy-wallet-context"},"2 - Deploy Wallet Context"),(0,o.kt)("p",null,"Deploy each of the contracts in the ",(0,o.kt)("a",{parentName:"p",href:"./wallet-context"},"Sequence Wallet Context")," using the Singleton Factory."),(0,o.kt)("p",null,"A script can be found in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/wallet-contracts/"},"Sequence Wallet Contracts repository"),"."),(0,o.kt)("p",null,"Clone the repository, configure the environment variables and run the script with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"yarn deploy <network>\n")),(0,o.kt)("h2",{id:"deploy-process-v1"},"Deploy Process V1"),(0,o.kt)("p",null,"The following steps are required to deploy the ",(0,o.kt)("a",{parentName:"p",href:"./wallet-context"},"Sequence Wallet V1 Context")," on a new network."),(0,o.kt)("admonition",{title:"Notice",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"For most popular networks this process ",(0,o.kt)("strong",{parentName:"p"},"is not")," required; due to the wallet contracts being already deployed."),(0,o.kt)("p",{parentName:"admonition"},"To see if a configuration already exists for a given chain go to ",(0,o.kt)("a",{parentName:"p",href:"/multi-chain-support#networks"},"Networks"),".")),(0,o.kt)("p",null,"A complete code example of this deployment flow can be found in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/sequence.js/blob/91ed0df67fc5ddc47abf727ae8b94a8ca4f66912/packages/0xsequence/tests/browser/testutils/deploy-wallet-context.ts"},"0xSequence.js test suite"),"\nand ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/wallet-contracts/blob/38e0719690eee3c4d7d8fa2ceff4ea22b0409f38/utils/deploy-contracts.ts"},"Wallet Contracts repository"),"."),(0,o.kt)("h3",{id:"1---deploy-nanouniversaldeployer"},"1 - Deploy NanoUniversalDeployer"),(0,o.kt)("p",null,"Pre-found Nick's method address with funds required to pay for the deployment of contracts."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Address: 0x9c5a87452d4FAC0cbd53BDCA580b20A45526B3AB\nFunds: 0.02170000000014\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Do not send additional funds to the address, as funds can't be refunded.")),(0,o.kt)("p",null,"Once the address is funded, you can deploy the NanoUniversalDeployer by executing the following pre-signed transaction:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"0xf9010880852416b84e01830222e08080b8b66080604052348015600f57600080fd5b50609980601d6000396000f3fe60a06020601f369081018290049091028201604052608081815260009260609284918190838280828437600092018290525084519495509392505060208401905034f5604080516001600160a01b0383168152905191935081900360200190a0505000fea26469706673582212205a310755225e3c740b2f013fb6343f4c205e7141fcdf15947f5f0e0e818727fb64736f6c634300060a00331ca01820182018201820182018201820182018201820182018201820182018201820a01820182018201820182018201820182018201820182018201820182018201820\n")),(0,o.kt)("p",null,"After the transaction is confirmed, you should see the address of the NanoUniversalDeployer:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"NanoUniversalDeployer: 0x9c5a87452d4FAC0cbd53BDCA580b20A45526B3AB\n")),(0,o.kt)("p",null,"See more about the ",(0,o.kt)("a",{parentName:"p",href:"https://gist.github.com/Agusx1211/de05dabf918d448d315aa018e2572031"},"NanoUniversalDeployer"),"."),(0,o.kt)("h3",{id:"2---deploy-universaldeployer2"},"2 - Deploy UniversalDeployer2"),(0,o.kt)("p",null,"In order to deploy contracts with an instance identifier, we need to deploy the UniversalDeployer2 contract. To ensure address consistency\nwe use the UniversalDeployer contract to deploy the UniversalDeployer contract."),(0,o.kt)("p",null,"Send the following data to the UniversalDeployer deployed in the previous step."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"0x608060405234801561001057600080fd5b5061013d806100206000396000f3fe60806040526004361061001e5760003560e01c80639c4ae2d014610023575b600080fd5b6100cb6004803603604081101561003957600080fd5b81019060208101813564010000000081111561005457600080fd5b82018360208201111561006657600080fd5b8035906020019184600183028401116401000000008311171561008857600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506100cd915050565b005b60008183516020850134f56040805173ffffffffffffffffffffffffffffffffffffffff83168152905191925081900360200190a050505056fea264697066735822122033609f614f03931b92d88c309d698449bb77efcd517328d341fa4f923c5d8c7964736f6c63430007060033\n")),(0,o.kt)("p",null,"After the transaction is confirmed, you should see the address of the UniversalDeployer2:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"UniversalDeployer2: 0x8a5bc19e22d6ad55a2c763b93a75d09f321fe764\n")),(0,o.kt)("h3",{id:"3---deploy-wallet-context"},"3 - Deploy Wallet Context"),(0,o.kt)("p",null,"Compile and deploy the contracts in the ",(0,o.kt)("a",{parentName:"p",href:"./wallet-context"},"Sequence Wallet Context")," using the UniversalDeployer2."),(0,o.kt)("p",null,"Refer to the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/sequence.js/blob/91ed0df67fc5ddc47abf727ae8b94a8ca4f66912/packages/0xsequence/tests/browser/testutils/deploy-wallet-context.ts"},"0xSequence.js test suite"),"\nor ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/wallet-contracts/blob/38e0719690eee3c4d7d8fa2ceff4ea22b0409f38/utils/deploy-contracts.ts"},"Wallet Contracts repository"),"\nfor the Wallet Contract context codebase."))}d.isMDXComponent=!0}}]);