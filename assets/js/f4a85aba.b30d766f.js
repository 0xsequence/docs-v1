"use strict";(self.webpackChunk_0xsequence_docs=self.webpackChunk_0xsequence_docs||[]).push([[7829],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),o=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=o(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=o(n),g=a,m=d["".concat(l,".").concat(g)]||d[g]||p[g]||s;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=g;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u[d]="string"==typeof e?e:a,i[1]=u;for(var o=2;o<s;o++)i[o]=n[o];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(7294),a=n(6010);const s="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(s,i),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>k});var r=n(7462),a=n(7294),s=n(6010),i=n(2466),u=n(6550),l=n(1980),o=n(7392),c=n(12);function d(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function p(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,o.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function g(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const r=(0,u.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(s),(0,a.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=p(e),[i,u]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!g({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[l,o]=m({queryString:n,groupId:r}),[d,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,c.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:r}),f=(()=>{const e=l??d;return g({value:e,tabValues:s})?e:null})();(0,a.useLayoutEffect)((()=>{f&&u(f)}),[f]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!g({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);u(e),o(e),b(e)}),[o,b,s]),tabValues:s}}var f=n(2389);const y="tabList__CuJ",h="tabItem_LNqP";function v(e){let{className:t,block:n,selectedValue:u,selectValue:l,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),r=o[n].value;r!==u&&(d(t),l(r))},g=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t)},o.map((e=>{let{value:t,label:n,attributes:i}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:u===t?0:-1,"aria-selected":u===t,key:t,ref:e=>c.push(e),onKeyDown:g,onClick:p},i,{className:(0,s.Z)("tabs__item",h,i?.className,{"tabs__item--active":u===t})}),n??t)})))}function w(e){let{lazy:t,children:n,selectedValue:r}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function C(e){const t=b(e);return a.createElement("div",{className:(0,s.Z)("tabs-container",y)},a.createElement(v,(0,r.Z)({},e,t)),a.createElement(w,(0,r.Z)({},e,t)))}function k(e){const t=(0,f.Z)();return a.createElement(C,(0,r.Z)({key:String(t)},e))}},2643:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>u,toc:()=>o});var r=n(7462),a=(n(7294),n(3905));n(4866),n(5162);const s={},i="Signing & Verifying Messages",u={unversionedId:"unity-sdk/wallet/sign-message",id:"unity-sdk/wallet/sign-message",title:"Signing & Verifying Messages",description:"Prerequisites",source:"@site/docs/09-unity-sdk/23-wallet/07-sign-message.mdx",sourceDirName:"09-unity-sdk/23-wallet",slug:"/unity-sdk/wallet/sign-message",permalink:"/unity-sdk/wallet/sign-message",draft:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/09-unity-sdk/23-wallet/07-sign-message.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"sidebar",previous:{title:"Nethereum",permalink:"/unity-sdk/wallet/nethereum"},next:{title:"Sending Transactions",permalink:"/unity-sdk/wallet/send-transaction"}},l={},o=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Signing Messages",id:"signing-messages",level:2},{value:"Verifying Message Signatures",id:"verifying-message-signatures",level:2}],c={toc:o};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"signing--verifying-messages"},"Signing & Verifying Messages"),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"Make sure you have a ",(0,a.kt)("inlineCode",{parentName:"p"},"Web3")," instance with the ",(0,a.kt)("inlineCode",{parentName:"p"},"SequenceInterceptor")," configured, as documented in ",(0,a.kt)("a",{parentName:"p",href:"./nethereum"},"the Nethereum section"),"."),(0,a.kt)("h2",{id:"signing-messages"},"Signing Messages"),(0,a.kt)("p",null,"Sequence wallets are able to easily sign arbitrary messages using Nethereum."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"To request a user's signature of a simple message:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'var address = await web3.GetAddress();\nvar message = "Hello, world!";\nvar signature = await web3.Eth.Sign.SendRequestAsync(address, message);\nDebug.Log(signature);\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"To request a user's signature of a typed-data (",(0,a.kt)("a",{parentName:"strong",href:"https://eips.ethereum.org/EIPS/eip-712"},"EIP712"),") message:")),(0,a.kt)("p",null,"You can either use a typed ABI"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'var chainId = await web3.Eth.ChainId.SendRequestAsync()\nvar data = new TypedData<Domain>\n{\n    Domain = new Domain\n    {\n        Name = "Test Name",\n        Version = "1",\n        ChainId = chainId,\n        VerifyingContract = "0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC"\n    },\n    Types = MemberDescriptionFactory.GetTypesMemberDescription(typeof(Domain)),\n    PrimaryType = nameof(Domain),\n};\nvar signature = await web3.Eth.AccountSigning.SignTypedDataV4.SendRequestAsync(data.ToJson());\nDebug.Log("Typed Data Signature: " + signature);\n')),(0,a.kt)("p",null,"or a raw JSON string."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'var chainId = await web3.Eth.ChainId.SendRequestAsync()\nvar data = @"\n{\n    ""domain"": {\n      ""name"": ""Ether Mail"",\n      ""version"": ""1"",\n      ""chainId"": " + chainId + @",\n      ""verifyingContract"": ""0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC""\n    },\n    ""types"": {\n      ""Person"": [\n        { ""name"": ""name"", ""type"": ""string"" },\n        { ""name"": ""wallet"", ""type"": ""address"" }\n      ]\n    },\n    ""message"": {\n      ""name"": ""Bob"",\n      ""wallet"": ""0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB""\n    }\n}\n";\nvar signature = await web3.Eth.AccountSigning.SignTypedDataV4.SendRequestAsync(data.ToJson());\nDebug.Log("Typed Data Signature: " + signature);\n')),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"verifying-message-signatures"},"Verifying Message Signatures"),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:3000/wallet/guides/sign-message"},"the sequence.js docs"),"."))}d.isMDXComponent=!0}}]);