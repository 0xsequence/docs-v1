"use strict";(self.webpackChunk_0xsequence_docs=self.webpackChunk_0xsequence_docs||[]).push([[7158],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>f});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),i=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},d=function(e){var t=i(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=i(a),m=r,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return a?n.createElement(f,c(c({ref:t},d),{},{components:a})):n.createElement(f,c({ref:t},d))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,c=new Array(o);c[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,c[1]=l;for(var i=2;i<o;i++)c[i]=a[i];return n.createElement.apply(null,c)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>c});var n=a(7294),r=a(6010);const o="tabItem_Ymn6";function c(e){let{children:t,hidden:a,className:c}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,c),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>m});var n=a(7462),r=a(7294),o=a(6010),c=a(2389),l=a(7392),s=a(7094),i=a(2466);const d="tabList__CuJ",u="tabItem_LNqP";function p(e){const{lazy:t,block:a,defaultValue:c,values:p,groupId:m,className:f}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=p??b.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),y=(0,l.l)(h,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===c?c:c??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==g&&!h.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:k}=(0,s.U)(),[x,C]=(0,r.useState)(g),E=[],{blockElementScrollPositionUntilNextRender:N}=(0,i.o5)();if(null!=m){const e=v[m];null!=e&&e!==x&&h.some((t=>t.value===e))&&C(e)}const O=e=>{const t=e.currentTarget,a=E.indexOf(t),n=h[a].value;n!==x&&(N(t),C(n),null!=m&&k(m,String(n)))},T=e=>{let t=null;switch(e.key){case"Enter":O(e);break;case"ArrowRight":{const a=E.indexOf(e.currentTarget)+1;t=E[a]??E[0];break}case"ArrowLeft":{const a=E.indexOf(e.currentTarget)-1;t=E[a]??E[E.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",d)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},f)},h.map((e=>{let{value:t,label:a,attributes:c}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:e=>E.push(e),onKeyDown:T,onClick:O},c,{className:(0,o.Z)("tabs__item",u,c?.className,{"tabs__item--active":x===t})}),a??t)}))),t?(0,r.cloneElement)(b.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function m(e){const t=(0,c.Z)();return r.createElement(p,(0,n.Z)({key:String(t)},e))}},3130:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var n=a(7462),r=(a(7294),a(3905)),o=a(5488),c=a(5162);const l={sidebar_label:"Contract metadata"},s="Fetch contract metadata of any ERC20, ERC721 or ERC1155 contract address",i={unversionedId:"metadata/guides/contract-metadata",id:"metadata/guides/contract-metadata",title:"Fetch contract metadata of any ERC20, ERC721 or ERC1155 contract address",description:"Sequence Metadata GetContractInfoBatch Method:",source:"@site/docs/05-metadata/04-guides/03-contract-metadata.mdx",sourceDirName:"05-metadata/04-guides",slug:"/metadata/guides/contract-metadata",permalink:"/metadata/guides/contract-metadata",draft:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/05-metadata/04-guides/03-contract-metadata.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Contract metadata"},sidebar:"sidebar",previous:{title:"Token metadata",permalink:"/metadata/guides/token-metadata"},next:{title:"Relayer",permalink:"/relayer"}},d={},u=[],p={toc:u};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"fetch-contract-metadata-of-any-erc20-erc721-or-erc1155-contract-address"},"Fetch contract metadata of any ERC20, ERC721 or ERC1155 contract address"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Sequence Metadata ",(0,r.kt)("inlineCode",{parentName:"em"},"GetContractInfoBatch")," Method:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Request: POST /rpc/Metadata/GetContractInfoBatch"),(0,r.kt)("li",{parentName:"ul"},"Content-Type: application/json"),(0,r.kt)("li",{parentName:"ul"},"Body (in JSON):",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"chainID"),' (string) -- the chain id, as a name or number (ie. "1" or "mainnet", "137" or "polygon", etc.)'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"contractAddresses")," (string of strings) -- array of contract addresses")))),(0,r.kt)("br",null),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example: ",(0,r.kt)("inlineCode",{parentName:"strong"},"GetContractInfoBatch")," of some contracts on Polygon")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(c.Z,{value:"curl",label:"curl",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash wrap",metastring:"class=wrap"},'curl -X POST -H"Content-Type: application/json" https://metadata.sequence.app/rpc/Metadata/GetContractInfoBatch -d \'{ "chainID": "polygon", "contractAddresses": ["0x631998e91476DA5B870D741192fc5Cbc55F5a52E", "0x17b66009af459dc8ebf37acf8a8b355379be2fe5", "0x2791bca1f2de4661ed88a30c99a7a9449aa84174", "0x2953399124f0cbb46d2cbacd8a89cf0599974963", "0x7227e371540cf7b8e512544ba6871472031f3335", "0x7c0ebabfc394ec6d926e801fe0e69a1f15a7fe4d", "0x8f3cf7ad23cd3cadbd9735aff958023239c6a063", "0xa1c57f48f0deb89f569dfbe6e2b7f46d33606fd4"] }\'\n'))),(0,r.kt)(c.Z,{value:"js",label:"Javascript / Typescript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// Works in both a Webapp (browser) or Node.js:\nimport { SequenceMetadataClient } from '@0xsequence/metadata'\n\nconst metadataClient = new SequenceMetadataClient()\n\nconst contractMetadata = await metadataClient.getContractInfoBatch({\n  chainID: 'polygon',\n  contractAddresses: [\n    '0x631998e91476DA5B870D741192fc5Cbc55F5a52E',\n    '0x17b66009af459dc8ebf37acf8a8b355379be2fe5',\n    '0x2791bca1f2de4661ed88a30c99a7a9449aa84174',\n    '0x2953399124f0cbb46d2cbacd8a89cf0599974963',\n    '0x7227e371540cf7b8e512544ba6871472031f3335',\n    '0x7c0ebabfc394ec6d926e801fe0e69a1f15a7fe4d',\n    '0x8f3cf7ad23cd3cadbd9735aff958023239c6a063',\n    '0xa1c57f48f0deb89f569dfbe6e2b7f46d33606fd4'\n  ]\n})\n\nconsole.log('Contract info for above addresses:', contractMetadata)\n"))),(0,r.kt)(c.Z,{value:"other",label:"Other",mdxType:"TabItem"},(0,r.kt)("p",null,"Please ",(0,r.kt)("a",{parentName:"p",href:"/support"},"contact our team")," for assistance with integrations to another target."))),(0,r.kt)("br",null))}m.isMDXComponent=!0}}]);