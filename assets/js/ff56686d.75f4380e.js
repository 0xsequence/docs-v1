"use strict";(self.webpackChunk_0xsequence_docs=self.webpackChunk_0xsequence_docs||[]).push([[9522],{6477:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>i});var s=n(1527),c=n(7279);const l={slug:"/quickstart"},r="Quick Start",a={id:"getting-started/quickstart",title:"Quick Start",description:"Get started with Sequence with just a few lines of code, follow along below.",source:"@site/docs/050-getting-started/01-quickstart.mdx",sourceDirName:"050-getting-started",slug:"/quickstart",permalink:"/quickstart",draft:!1,unlisted:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/050-getting-started/01-quickstart.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/quickstart"},sidebar:"sidebar",previous:{title:"Getting Started",permalink:"/getting-started"},next:{title:"Signing Messages",permalink:"/getting-started/sign-message"}},o={},i=[{value:"Setup your project",id:"setup-your-project",level:2},{value:"Install",id:"install",level:2},{value:"Connect your wallet",id:"connect-your-wallet",level:2},{value:"Get the wallet address",id:"get-the-wallet-address",level:2},{value:"Open the wallet from your dapp",id:"open-the-wallet-from-your-dapp",level:2},{value:"Get the blockchain network ID",id:"get-the-blockchain-network-id",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,c.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"quick-start",children:"Quick Start"}),"\n",(0,s.jsx)(t.p,{children:"Get started with Sequence with just a few lines of code, follow along below."}),"\n",(0,s.jsx)(t.h2,{id:"setup-your-project",children:"Setup your project"}),"\n",(0,s.jsxs)(t.p,{children:["Visit the ",(0,s.jsx)(t.a,{href:"https://sequence.build",children:"Sequence Builder"})," to setup your project and get your API key."]}),"\n",(0,s.jsx)(t.h2,{id:"install",children:"Install"}),"\n",(0,s.jsxs)(t.p,{children:["First, install the ",(0,s.jsx)(t.a,{href:"https://www.npmjs.com/package/0xsequence",children:"0xsequence"})," and ",(0,s.jsx)(t.a,{href:"https://www.npmjs.com/package/ethers",children:"ethers"})," packages from NPM:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"npm install 0xsequence ethers\n"})}),"\n",(0,s.jsx)(t.p,{children:"or"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"pnpm install 0xsequence ethers\n"})}),"\n",(0,s.jsx)(t.p,{children:"or"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"yarn add 0xsequence ethers\n"})}),"\n",(0,s.jsxs)(t.p,{children:["You can find the source of the ",(0,s.jsx)(t.code,{children:"0xsequence"})," package on ",(0,s.jsx)(t.a,{href:"https://github.com/0xsequence/sequence.js",children:"Github"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"connect-your-wallet",children:"Connect your wallet"}),"\n",(0,s.jsxs)(t.p,{children:["First, acquire a project ",(0,s.jsx)(t.code,{children:"Access Key"})," from the ",(0,s.jsx)(t.a,{href:"https://sequence.build/",children:"Sequence Builder"})," following ",(0,s.jsx)(t.a,{href:"/getting-started/get-access-key-in-builder",children:"these steps"})]}),"\n",(0,s.jsx)(t.p,{children:"and connect to the wallet with the following code:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Connecting to Ethereum Mainnet:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import { sequence } from '0xsequence'\n\nconst projectAccessKey = '<access_key>'\n\nconst wallet = sequence.initWallet(projectAccessKey, { defaultNetwork: 'mainnet' })\nconst connectDetails = await wallet.connect(({ app: 'Your app name' }))\n\nconsole.log('=> connected?', connectDetails.connected)\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Connecting to Polygon:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import { sequence } from '0xsequence'\n\nconst projectAccessKey = '<access_key>'\n\nconst wallet = sequence.initWallet(projectAccessKey, { defaultNetwork: 'polygon' })\nconst connectDetails = await wallet.connect(({ app: 'Your app name' }))\n\nconsole.log('=> connected?', connectDetails.connected)\n"})}),"\n",(0,s.jsxs)(t.admonition,{title:"Required parameters and fields",type:"info",children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"projectAccessKey"})," (as first parameter of initWallet) is required which can be generated in the ",(0,s.jsx)(t.a,{href:"https://sequence.build",children:"Sequence Builder"})," by creating a project and accesssing Settings to retrieve API Access Keys."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"defaultNetwork"})," is optional, the wallet can always be used to interact with any supported network by using the ",(0,s.jsx)(t.code,{children:"getProvider('<network>')"})," and ",(0,s.jsx)(t.code,{children:"getSigner(<network>)"})," methods."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"app"})," during connect is ",(0,s.jsx)(t.strong,{children:"always"})," required, this is the name of your dapp, and will be shown to the user when they are asked to connect their wallet."]})]}),"\n",(0,s.jsx)(t.h2,{id:"get-the-wallet-address",children:"Get the wallet address"}),"\n",(0,s.jsx)(t.p,{children:"Once connected to the wallet, you can get the wallet address:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"const wallet = sequence.getWallet()\nconst walletAddress = wallet.getAddress()\n\nconsole.log(walletAddress)\n// # => '0xabcd....'\n"})}),"\n",(0,s.jsx)(t.p,{children:"Trying to get the wallet address before the wallet is connected will throw an error."}),"\n",(0,s.jsx)(t.h2,{id:"open-the-wallet-from-your-dapp",children:"Open the wallet from your dapp"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"const wallet = sequence.getWallet()\nwallet.openWallet()\n"})}),"\n",(0,s.jsx)(t.h2,{id:"get-the-blockchain-network-id",children:"Get the blockchain network ID"}),"\n",(0,s.jsx)(t.p,{children:"You can use a variety of methods to query the chain ID which the wallet is presently\nconnected to."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"const wallet = sequence.getWallet()\n\nconsole.log('chainId:', await wallet.getChainId())\n\nconst provider = wallet.getProvider()\nconsole.log('provider.getChainId()', await provider.getChainId())\n\nconst signer = wallet.getSigner()\nconsole.log('signer.getChainId()', await signer.getChainId())\n"})})]})}function h(e={}){const{wrapper:t}={...(0,c.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},7279:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>r});var s=n(959);const c={},l=s.createContext(c);function r(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);