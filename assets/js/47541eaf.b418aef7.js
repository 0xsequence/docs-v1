"use strict";(self.webpackChunk_0xsequence_docs=self.webpackChunk_0xsequence_docs||[]).push([[3253],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=d(a),h=r,m=u["".concat(s,".").concat(h)]||u[h]||p[h]||l;return a?n.createElement(m,i(i({ref:t},c),{},{components:a})):n.createElement(m,i({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),r=a(6010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>h});var n=a(7462),r=a(7294),l=a(6010),i=a(2389),o=a(7392),s=a(7094),d=a(2466);const c="tabList__CuJ",u="tabItem_LNqP";function p(e){const{lazy:t,block:a,defaultValue:i,values:p,groupId:h,className:m}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=p??f.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),b=(0,o.l)(g,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===i?i:i??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==k&&!g.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:w}=(0,s.U)(),[v,N]=(0,r.useState)(k),x=[],{blockElementScrollPositionUntilNextRender:C}=(0,d.o5)();if(null!=h){const e=y[h];null!=e&&e!==v&&g.some((t=>t.value===e))&&N(e)}const T=e=>{const t=e.currentTarget,a=x.indexOf(t),n=g[a].value;n!==v&&(C(t),N(n),null!=h&&w(h,String(n)))},E=e=>{let t=null;switch(e.key){case"Enter":T(e);break;case"ArrowRight":{const a=x.indexOf(e.currentTarget)+1;t=x[a]??x[0];break}case"ArrowLeft":{const a=x.indexOf(e.currentTarget)-1;t=x[a]??x[x.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},m)},g.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,key:t,ref:e=>x.push(e),onKeyDown:E,onClick:T},i,{className:(0,l.Z)("tabs__item",u,i?.className,{"tabs__item--active":v===t})}),a??t)}))),t?(0,r.cloneElement)(f.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==v})))))}function h(e){const t=(0,i.Z)();return r.createElement(p,(0,n.Z)({key:String(t)},e))}},9955:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var n=a(7462),r=(a(7294),a(3905)),l=a(5488),i=a(5162);const o={},s="Wallet Configuration",d={unversionedId:"wallet/wallet-contracts/wallet-configuration",id:"wallet/wallet-contracts/wallet-configuration",title:"Wallet Configuration",description:"Every Sequence wallet has a configuration defined by a threshold and a list of signers with their corresponding weights.",source:"@site/docs/03-wallet/10-wallet-contracts/04-wallet-configuration.mdx",sourceDirName:"03-wallet/10-wallet-contracts",slug:"/wallet/wallet-contracts/wallet-configuration",permalink:"/wallet/wallet-contracts/wallet-configuration",draft:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/03-wallet/10-wallet-contracts/04-wallet-configuration.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"sidebar",previous:{title:"Wallet Factory",permalink:"/wallet/wallet-contracts/wallet-factory"},next:{title:"Modules & wallet update",permalink:"/wallet/wallet-contracts/modules-and-updates"}},c={},u=[{value:"Configuration layout",id:"configuration-layout",level:2},{value:"Signer layout",id:"signer-layout",level:3},{value:"Example",id:"example",level:4},{value:"The valid combinations of signers are:",id:"the-valid-combinations-of-signers-are",level:4},{value:"Configuration hash - ImageHash",id:"configuration-hash---imagehash",level:3},{value:"Compute image hash",id:"compute-image-hash",level:4},{value:"Initial wallet configuration",id:"initial-wallet-configuration",level:2},{value:"Compute wallet address",id:"compute-wallet-address",level:4}],p={toc:u};function h(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"wallet-configuration"},"Wallet Configuration"),(0,r.kt)("p",null,"Every Sequence wallet has a configuration defined by a threshold and a list of signers with their corresponding weights."),(0,r.kt)("h2",{id:"configuration-layout"},"Configuration layout"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Range"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Threshold"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint16")),(0,r.kt)("td",{parentName:"tr",align:null},"1 - 65535"),(0,r.kt)("td",{parentName:"tr",align:null},'Required combined total "weight" of signers for a signature to be considered valid.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Signers"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"signer[]")),(0,r.kt)("td",{parentName:"tr",align:null},"unlimited - bounded by gas"),(0,r.kt)("td",{parentName:"tr",align:null},'List of signers that with their corresponding "weight"s.')))),(0,r.kt)("h3",{id:"signer-layout"},"Signer layout"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Range"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"weight"'),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint8")),(0,r.kt)("td",{parentName:"tr",align:null},"0 - 255"),(0,r.kt)("td",{parentName:"tr",align:null},'"weight" of every signature of the signer.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"address"'),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"address"')),(0,r.kt)("td",{parentName:"tr",align:null},"--"),(0,r.kt)("td",{parentName:"tr",align:null},'"address" of the signer, it may be an EOA or another smart contract wallet with EIP-1271 support.')))),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "threshold": 5,\n  "signers": [\n    {\n      "address": "0x4fbf69aa2a75f9942a768dc8da7804ec965f7bea",\n      "weight": 2\n    },\n    {\n      "address": "0x596af90cecdbf9a768886e771178fd5561dd27ab",\n      "weight": 3\n    },\n    {\n      "address": "0x6192e0fdcd868b3de01c7fbc0ad98baebd7330c1",\n      "weight": 2\n    },\n    {\n      "address": "0xec9a7204a43d3f4a82c84fde92d25bfc9110981e",\n      "weight": 1\n    }\n  ]\n}\n')),(0,r.kt)("p",null,"This example has a threshold of 5 and 4 signers."),(0,r.kt)("h4",{id:"the-valid-combinations-of-signers-are"},"The valid combinations of signers are:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"- 0x4fbf69aa2a75f9942a768dc8da7804ec965f7bea & 0x596af90cecdbf9a768886e771178fd5561dd27ab - combined weight of 2 + 3 = 5\n- 0x6192e0fdcd868b3de01c7fbc0ad98baebd7330c1 & 0x596af90cecdbf9a768886e771178fd5561dd27ab - combined weight of 2 + 3 = 5\n- 0x4fbf69aa2a75f9942a768dc8da7804ec965f7bea, 0x6192e0fdcd868b3de01c7fbc0ad98baebd7330c1 & 0xec9a7204a43d3f4a82c84fde92d25bfc9110981e - combined weight of 2 + 2 + 1 = 5\n")),(0,r.kt)("p",null,"Any combination of signers with a combined weight under the threshold is considered invalid; any aditional signers above the threshold are ignored."),(0,r.kt)("h3",{id:"configuration-hash---imagehash"},"Configuration hash - ImageHash"),(0,r.kt)("p",null,"The configuration is never stored directly on the contract, but instead is hashed and checked against every time a signature is validated. This allows the wallet contracts to reduce the usage of storage and therefore the gas cost."),(0,r.kt)("p",null,"Wallets that never have been updated don't store the ",(0,r.kt)("inlineCode",{parentName:"p"},"imageHash")," directly, instead the ",(0,r.kt)("inlineCode",{parentName:"p"},"imageHash")," is used as the ",(0,r.kt)("inlineCode",{parentName:"p"},"salt")," during the contract creation, and signatures are validated against the address of the wallet."),(0,r.kt)("h4",{id:"compute-image-hash"},"Compute image hash"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"solidity",label:"Solidity",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"keccak256(abi.encode(\n    uint8 weight_1, address signer_1,\n    keccak256(abi.encode(\n        uint8 weight_2, address signer_2,\n        keccak256(abi.encode(\n            uint8 weight_3, address signer_3,\n            keccak256(abi.encode(\n                uint256 threshold\n            ))\n        ))\n    ))\n))\n"))),(0,r.kt)(i.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let tmp = ethers.utils.solidityPack(['uint256'], [configuration.threshold])\n\nfor (const signer of configuration.signers) {\n  tmp = ethers.utils.keccak256(\n    ethers.utils.defaultAbiCoder.encode(\n      ['bytes32', 'uint8', 'address'],\n      [tmp, signer.weight, signer.address]\n    )\n  )\n}\n\nconst imageHash = tmp\n")))),(0,r.kt)("h2",{id:"initial-wallet-configuration"},"Initial wallet configuration"),(0,r.kt)("p",null,"The initial wallet configuration determines the address of the wallet, subsequent updates don't change the address."),(0,r.kt)("p",null,"The wallet address can be computed using the ",(0,r.kt)("inlineCode",{parentName:"p"},"imageHash"),", the ",(0,r.kt)("inlineCode",{parentName:"p"},"factory")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"mainModule")," of the wallet."),(0,r.kt)("h4",{id:"compute-wallet-address"},"Compute wallet address"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// The code of the wallet proxy contract\nconst WalletProxyBytecode = \"0x603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3\"\n\n// These values are defined by the wallet context\n// they must be known in order to validate the counter-factual wallet imageHash\nconst factory = \"0xf9D09D634Fb818b05149329C1dcCFAeA53639d96\"\nconst mainModule = \"0xd01F11855bCcb95f88D7A48492F66410d4637313\"\n\n// Append the `mainModule` to the `WalletProxyBytecode`\n// this completed the creation code of the proxy contract\n// used for computing the wallet address as defined by the CREATE2 opcode\nconst codeHash = ethers.utils.keccak256(\n  ethers.utils.solidityPack(\n    [\n      'bytes',\n      'bytes32'\n    ],\n    [\n      WalletContractBytecode,\n      ethers.utils.hexZeroPad(mainModule, 32)\n    ]\n  )\n)\n\n// Compute the wallet address\nconst hash = ethers.utils.keccak256(\n  ethers.utils.solidityPack(\n    [\n      'bytes1',\n      'address',\n      'bytes32',\n      'bytes32'\n    ], [\n      '0xff',\n      factory,\n      salt,\n      codeHash\n    ]\n  )\n)\n\nconst address = ethers.utils.getAddress(ethers.utils.hexDataSlice(hash, 12))\n")))}h.isMDXComponent=!0}}]);