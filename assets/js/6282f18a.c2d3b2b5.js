"use strict";(self.webpackChunk_0xsequence_docs=self.webpackChunk_0xsequence_docs||[]).push([[2935],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var i=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=i.createContext({}),s=function(e){var n=i.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return i.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),g=o,m=u["".concat(c,".").concat(g)]||u[g]||d[g]||r;return t?i.createElement(m,a(a({ref:n},p),{},{components:t})):i.createElement(m,a({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=g;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<r;s++)a[s]=t[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},3551:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var i=t(7462),o=(t(7294),t(3905));const r={sidebar_label:"Getting Started"},a="Getting Started with Sequence Kit",l={unversionedId:"wallet/connectors/kit/getting-started",id:"wallet/connectors/kit/getting-started",title:"Getting Started with Sequence Kit",description:"In this guide, we will walk you through installing Sequence Kit, triggering the connection modal, and displaying the embedded wallet in your application.",source:"@site/docs/03-wallet/05-connectors/02-kit/02-getting-started.mdx",sourceDirName:"03-wallet/05-connectors/02-kit",slug:"/wallet/connectors/kit/getting-started",permalink:"/wallet/connectors/kit/getting-started",draft:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/03-wallet/05-connectors/02-kit/02-getting-started.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Getting Started"},sidebar:"sidebar",previous:{title:"Sequence Kit Documentation",permalink:"/wallet/connectors/kit/overview"},next:{title:"Configuration",permalink:"/wallet/connectors/kit/configuration"}},c={},s=[{value:"Installing Sequence Kit Packages",id:"installing-sequence-kit-packages",level:2}],p={toc:s};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started-with-sequence-kit"},"Getting Started with Sequence Kit"),(0,o.kt)("p",null,"In this guide, we will walk you through installing Sequence Kit, triggering the connection modal, and displaying the embedded wallet in your application."),(0,o.kt)("h2",{id:"installing-sequence-kit-packages"},"Installing Sequence Kit Packages"),(0,o.kt)("p",null,"Sequence Kit is modular, allowing you to install only the necessary packages. To get started, install the ",(0,o.kt)("inlineCode",{parentName:"p"},"kit")," core package, the ",(0,o.kt)("inlineCode",{parentName:"p"},"connectors")," package for interfacing with various wallet providers, and the ",(0,o.kt)("inlineCode",{parentName:"p"},"wallet")," for the embedded wallet. Additionally, install other dependencies such as wagmi, viem, and 0xsequence."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @0xsequence/kit @0xsequence/kit-connectors @0xsequence/kit-wallet wagmi ethers@5.7.2 viem 0xsequence\n# or\npnpm install @0xsequence/kit @0xsequence/kit-connectors @0xsequence/kit-wallet wagmi ethers@5.7.2 viem 0xsequence\n# or\nyarn add @0xsequence/kit @0xsequence/kit-connectors @0xsequence/kit-wallet wagmi ethers@5.7.2 viem 0xsequence\n")),(0,o.kt)("h1",{id:"setting-up-the-kit-wrapper"},"Setting Up the Kit Wrapper"),(0,o.kt)("p",null,"To utilize the core kit wrapper for connecting web3 wallets to your application, follow these steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Configure wagmi for your app. Below is a basic wagmi configuration. For advanced configurations, please refer to the ",(0,o.kt)("a",{parentName:"li",href:"https://wagmi.sh/react/WagmiConfig"},"wagmi documentation"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import MyPage from './components/MyPage'\nimport { KitProvider } from '@0xsequence/kit'\nimport { getDefaultConnectors } from '@0xsequence/kit-connectors'\nimport { configureChains, createConfig, WagmiConfig } from 'wagmi'\nimport { publicProvider } from 'wagmi/providers/public'\nimport { mainnet, polygon } from 'wagmi/chains'\n\nfunction App() {\n  const { chains, publicClient, webSocketPublicClient } = configureChains(\n    [polygon, mainnet],\n    [publicProvider()],\n  )\n\n  const connectors = getDefaultConnectors({\n    chains,\n    walletConnectProjectId: 'project_id',\n    defaultChainId: 137\n  })\n  \n  const config = createConfig({\n    autoConnect: true,\n    publicClient,\n    webSocketPublicClient,\n    connectors\n  })\n\n  return (\n    <WagmiConfig config={config}>\n      <KitProvider>\n        <MyPage />\n      </KitProvider>\n    </WagmiConfig>\n  );\n}\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Wrap your app with the ",(0,o.kt)("inlineCode",{parentName:"li"},"KitProvider")," within the ",(0,o.kt)("inlineCode",{parentName:"li"},"WagmiConfig")," wrapper.")),(0,o.kt)("h1",{id:"setting-up-the-embedded-wallet-wrapper"},"Setting Up the Embedded Wallet Wrapper"),(0,o.kt)("p",null,"To install the optional embedded wallet, add the ",(0,o.kt)("inlineCode",{parentName:"p"},"KitWalletProvider")," below the ",(0,o.kt)("inlineCode",{parentName:"p"},"KitProvider")," wrapper."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { KitWalletProvider } from '@0xsequence/kit-wallet'\n\n// ...\n\nconst App = () => {\n  return (\n    <WagmiConfig config={config}>\n      <KitProvider>\n        <KitWalletProvider>\n          <Page />\n        </KitWalletProvider>\n      </KitProvider>\n    </WagmiConfig>\n  )\n}\n")),(0,o.kt)("p",null,"The complete code will then look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import MyPage from './components/MyPage'\nimport { KitProvider } from '@0xsequence/kit'\nimport { getDefaultConnectors } from '@0xsequence/kit-connectors'\nimport { KitWalletProvider } from '@0xsequence/kit-wallet'\nimport { configureChains, createConfig, WagmiConfig } from 'wagmi'\nimport { publicProvider } from 'wagmi/providers/public'\nimport { mainnet, polygon } from 'wagmi/chains'\n\nfunction App() {\n  const { chains, publicClient, webSocketPublicClient } = configureChains(\n    [polygon, mainnet],\n    [publicProvider()],\n  )\n\n  const connectors = getDefaultConnectors({\n    chains,\n    walletConnectProjectId: 'project_id',\n    defaultChainId: 137\n  })\n\n  \n  const config = createConfig({\n    autoConnect: true,\n    publicClient,\n    webSocketPublicClient,\n    connectors\n  })\n\n  return (\n    <WagmiConfig config={config}>\n      <KitProvider>\n        <KitWalletProvider>\n          <MyPage />\n        </KitWalletProvider>\n      </KitProvider>\n    </WagmiConfig>\n  );\n}\n")),(0,o.kt)("h1",{id:"triggering-the-connect-modal"},"Triggering the Connect Modal"),(0,o.kt)("div",{class:"text--center"},(0,o.kt)("img",{src:"/img/kit/sign-in-modal.png"})),(0,o.kt)("p",null,"Invoke the connect modal using the ",(0,o.kt)("inlineCode",{parentName:"p"},"useOpenConnectModal")," hook."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useOpenConnectModal } from '@0xsequence/kit'\nimport { useDisconnect, useAccount, useSigner, useProvider } from 'wagmi'\n\n\nconst MyReactComponent = () => {\n  const { setOpenConnectModal } = useOpenConnectModal()\n\n  const { isConnected } = useAccount()\n\n  const onClick = () => {\n    setOpenConnectModal(true)\n  }\n\n  return (\n    <>\n      {!isConnected && (\n        <button onClick={onClick}>\n          Sign in\n        </button>\n      )}\n    </>\n  )\n}\n")),(0,o.kt)("p",null,"The modal will automatically close once the user signs in. You can utilize the ",(0,o.kt)("inlineCode",{parentName:"p"},"useAccount")," hook from wagmi to detect the user's connection status."),(0,o.kt)("h1",{id:"invoking-the-embedded-wallet-modal"},"Invoking the embedded wallet modal"),(0,o.kt)("div",{class:"text--center"},(0,o.kt)("img",{src:"/img/kit/embedded-wallet.png"})),(0,o.kt)("p",null,"Open the embedded wallet using the ",(0,o.kt)("inlineCode",{parentName:"p"},"useOpenWalletModal")," react hook."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useOpenWalletModal } from '@0xsequence/kit-wallet'\n\nconst MyComponent = () => {\n  const { setOpenWalletModal } = useOpenWalletModal()\n\n  const onClick = () => {\n    setOpenWalletModal(true)\n  }\n\n  return (\n    <button onClick={onClick}>open wallet</button>\n  )\n}\n")),(0,o.kt)("h1",{id:"react-example"},"React Example"),(0,o.kt)("p",null,"The Sequence Kit ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/kit"},"Github repository")," contains an ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/kit/tree/master/examples/react"},"example app")," that you can use for learning and testing."))}u.isMDXComponent=!0}}]);