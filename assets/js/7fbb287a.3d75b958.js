"use strict";(self.webpackChunk_0xsequence_docs=self.webpackChunk_0xsequence_docs||[]).push([[3962],{6076:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var s=t(1527),a=t(7279);const r={},o="Sending ERC-721 (NFT) Tokens",c={id:"wallet/guides/send-erc721",title:"Sending ERC-721 (NFT) Tokens",description:"Sending an ERC-721 NFT is similar to sending an ERC-20 token.",source:"@site/docs/150-wallet/04-guides/07-send-erc721.mdx",sourceDirName:"150-wallet/04-guides",slug:"/wallet/guides/send-erc721",permalink:"/wallet/guides/send-erc721",draft:!1,unlisted:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/150-wallet/04-guides/07-send-erc721.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"sidebar",previous:{title:"Sending ERC-20 Tokens",permalink:"/wallet/guides/send-erc20"},next:{title:"Sending ERC-1155 (Collectible) Tokens",permalink:"/wallet/guides/send-erc1155"}},i={},d=[];function l(n){const e={code:"code",h1:"h1",p:"p",pre:"pre",...(0,a.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"sending-erc-721-nft-tokens",children:"Sending ERC-721 (NFT) Tokens"}),"\n",(0,s.jsx)(e.p,{children:"Sending an ERC-721 NFT is similar to sending an ERC-20 token.\nThe only notable difference is in the contract standard itself:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"const erc721Interface = new ethers.utils.Interface([\n  'function safeTransferFrom(address _from, address _to, uint256 _tokenId)'\n])\n\n// Encode the transfer of the NFT tokenId to recipient\nconst address = await wallet.getAddress()\nconst data = erc721Interface.encodeFunctionData(\n  'safeTransferFrom', [address, recipientAddress, tokenId]\n)\n\nconst transaction = {\n  to: erc721TokenAddress,\n  data\n}\n\nconst signer = wallet.getSigner()\nconst txnResponse = await signer.sendTransaction(transaction)\nconsole.log(txnResponse)\n\n"})}),"\n",(0,s.jsx)(e.p,{children:"With batching functionality, you can send multiple token transfers in a single native transaction:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"const erc721Interface = new ethers.utils.Interface([\n  'function safeTransferFrom(address _from, address _to, uint256 _tokenId)'\n])\n\n// Encode two different ERC-721 token transfers\nconst data1 = erc721Interface.encodeFunctionData(\n  'safeTransferFrom', [address, recipient1Address, amount1]\n)\nconst data2 = erc721Interface.encodeFunctionData(\n  'safeTransferFrom', [address, recipient2Address, amount2]\n)\n\nconst transaction1 = {\n  to: erc721ContractAddress,\n  data: data1\n}\n\nconst transaction2 = {\n  to: erc721ContractAddress,\n  data: data2\n}\n\n// Send a multiple transactions as a single bundle which is executed as one transaction on chain.\nconst signer = wallet.getSigner()\nconst txnResponse = await signer.sendTransactionBatch([transaction1, transaction2])\nconsole.log(txnResponse)\n\n"})})]})}function u(n={}){const{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(l,{...n})}):l(n)}},7279:(n,e,t)=>{t.d(e,{Z:()=>c,a:()=>o});var s=t(959);const a={},r=s.createContext(a);function o(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:o(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);