"use strict";(self.webpackChunk_0xsequence_docs=self.webpackChunk_0xsequence_docs||[]).push([[1986],{3409:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>r});var s=t(1527),i=t(7279);const l={},o="Connect Wallet",c={id:"wallet/guides/connect-wallet",title:"Connect Wallet",description:"Sequence is a very flexible wallet which allow users multiple ways to connect / access their wallet. This includes:",source:"@site/docs/150-wallet/04-guides/01-connect-wallet.mdx",sourceDirName:"150-wallet/04-guides",slug:"/wallet/guides/connect-wallet",permalink:"/wallet/guides/connect-wallet",draft:!1,unlisted:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/150-wallet/04-guides/01-connect-wallet.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"sidebar",previous:{title:"Platforms",permalink:"/wallet/platforms"},next:{title:"Authenticate Users with Message Signature",permalink:"/wallet/guides/auth-address"}},a={},r=[{value:"Connecting your dapp with <code>0xsequence</code>",id:"connecting-your-dapp-with-0xsequence",level:2},{value:"Wallet Login and Connect Options",id:"wallet-login-and-connect-options",level:2},{value:"<strong>app</strong>",id:"app",level:4},{value:"<strong>appProtocol</strong>",id:"appprotocol",level:4},{value:"<strong>origin</strong>",id:"origin",level:4},{value:"<strong>expiry</strong>",id:"expiry",level:4},{value:"<strong>authorize</strong>",id:"authorize",level:4},{value:"<strong>authorizeNonce</strong>",id:"authorizenonce",level:4},{value:"<strong>refresh</strong>",id:"refresh",level:4},{value:"<strong>keepWalletOpened</strong>",id:"keepwalletopened",level:4},{value:"<strong>askForEmail</strong>",id:"askforemail",level:4},{value:"<strong>settings.theme</strong>",id:"settingstheme",level:4},{value:"<strong>settings.bannerUrl</strong>",id:"settingsbannerurl",level:4},{value:"<strong>settings.signInWith</strong>",id:"settingssigninwith",level:4},{value:"<strong>settings.signInWithEmail</strong>",id:"settingssigninwithemail",level:4},{value:"<strong>settings.signInOptions</strong>",id:"settingssigninoptions",level:4},{value:"<strong>settings.includedPaymentProviders</strong>",id:"settingsincludedpaymentproviders",level:4},{value:"<strong>settings.defaultFundingCurrency</strong>",id:"settingsdefaultfundingcurrency",level:4},{value:"<strong>settings.defaultPurchaseAmount</strong>",id:"settingsdefaultpurchaseamount",level:4},{value:"<strong>settings.lockFundingCurrencyToDefault</strong>",id:"settingslockfundingcurrencytodefault",level:4},{value:"Connecting your dapp with <code>web3.js</code> or <code>ethers.js</code>",id:"connecting-your-dapp-with-web3js-or-ethersjs",level:2},{value:"Connecting to any Ethereum dapp with the Sequence Wallet Chrome Extension",id:"connecting-to-any-ethereum-dapp-with-the-sequence-wallet-chrome-extension",level:2},{value:"Connecting via <code>WalletConnect</code>",id:"connecting-via-walletconnect",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"connect-wallet",children:"Connect Wallet"}),"\n",(0,s.jsx)(n.p,{children:"Sequence is a very flexible wallet which allow users multiple ways to connect / access their wallet. This includes:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"On-demand Ethereum web wallet for new users"})," via ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/0xsequence",children:"0xsequence"})," npm package + ",(0,s.jsx)(n.a,{href:"https://sequence.app",children:"https://sequence.app"})," -- this option allows\ndevelopers to offer users an on-demand web3 wallet. No user install required -- any browser will ",(0,s.jsx)(n.em,{children:"just work"}),", and users\ncan onboard with a familiar Web2 experience. Think of it like ",(0,s.jsx)(n.em,{children:"Paypal / Stripe but for web3"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Surf all of web3"})," via ",(0,s.jsx)(n.a,{href:"https://chrome.google.com/webstore/detail/sequence-wallet/ocmccklecaalljlflmclidjeclpcpdim?hl=en",children:"Sequence Wallet Chrome Extension"})," -- users\nwho have the Sequence Wallet Chrome Extension installed are able to access any Ethereum-compatible Dapp on the Web :) Just like how MetaMask works,\nbut of course with a bunch of the benefits of Sequence."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Mobile phone access"})," via ",(0,s.jsx)(n.a,{href:"https://walletconnect.com/",children:"WalletConnect"})," support within Sequence Wallet -- users are able to communicate with their wallets remotely\nvia the awesome Wallet Connect protocol. This is an excellent option if using Sequence Wallet from your mobile phone and want to connect\nyour wallet to a desktop dapp."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Sequence Wallet is built on Web Browser (W3C) and Ethereum web3 standards -- and is available everywhere that a modern browser is able to run.\nWe've carefully designed the wallet for simple onboarding, while maintaining security for users, and allowing users to progressively\nincrease the level of their security through additional keys and measures."}),"\n",(0,s.jsx)(n.p,{children:"This means, that if you've developed a dapp to work with MetaMask, then Sequence will work too without any changes. If you're\nusing web3.js or ethers.js, Sequence will just work too. This is the beauty of interoperability on web3 :)"}),"\n",(0,s.jsxs)(n.h2,{id:"connecting-your-dapp-with-0xsequence",children:["Connecting your dapp with ",(0,s.jsx)(n.code,{children:"0xsequence"})]}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.mdxAdmonitionTitle,{children:["A delightful wallet without requiring your users to install anything ",":D"]}),(0,s.jsxs)(n.p,{children:["By integrating ",(0,s.jsx)(n.code,{children:"0xsequence"}),", users may access your dapp without having to install any special extensions,\nand the wallet also works on mobile browsers!"]})]}),"\n",(0,s.jsx)(n.p,{children:"Your dapp can connect to your user's wallet by first instantiating the Wallet provider:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { sequence } from \"0xsequence\";\n\nconst projectAccessKey = '<access_key>'\n\n// This assumes your dapp runs on Ethereum mainnet\nconst wallet = sequence.initWallet(projectAccessKey);\n\n// If your dapp runs on a different EVM-compatible blockchain, you can specify its name\n// const wallet = sequence.initWallet(projectAccessKey, { defaultNetwork: 'polygon' });\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note that is possible to retrieve the above instance by using the ",(0,s.jsx)(n.code,{children:"getWallet()"})," method:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import { sequence } from "0xsequence";\nconst wallet = sequence.getWallet();\n'})}),"\n",(0,s.jsx)(n.p,{children:"Once you have the instance, you can connect to the wallet:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const connectDetails = await wallet.connect({\n  app: "Your Dapp name",\n  authorize: true,\n  // And pass settings if you would like to customize further\n  settings: {\n    theme: "light",\n    bannerUrl: "https://yoursite.com/banner-image.png", // 3:1 aspect ratio, 1200x400 works best\n    includedPaymentProviders: ["moonpay", "ramp"],\n    defaultFundingCurrency: "matic",\n    lockFundingCurrencyToDefault: false,\n  },\n});\n\nconsole.log("user accepted connect?", connectDetails.connected);\nconsole.log(\n  "users signed connect proof to valid their account address:",\n  connectDetails.proof\n);\n'})}),"\n",(0,s.jsxs)(n.p,{children:["You can pick/limit the available sign in options with ",(0,s.jsx)(n.code,{children:"signInOptions"}),". Will be ignored if user is already signed in."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const wallet = sequence.getWallet();\n\nawait wallet.connect({\n  app: "Your Dapp name",\n  settings: { signInOptions: ["google"] },\n});\n'})}),"\n",(0,s.jsxs)(n.p,{children:["After you connect, you can use ",(0,s.jsx)(n.code,{children:"wallet.openWallet()"})," to open the wallet:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const wallet = sequence.getWallet();\nwallet.openWallet();\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can also optionally pass a path, and use ",(0,s.jsx)(n.code,{children:"openWithOptions"})," intent to pass settings when you open the wallet:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const settings: Settings = {\n  theme: "dark",\n  bannerUrl: "https://yoursite.com/banner-image.png", // 3:1 aspect ratio, 1200x400 works best\n  includedPaymentProviders: ["moonpay", "ramp"],\n  defaultFundingCurrency: "eth",\n  lockFundingCurrencyToDefault: false,\n};\n\nconst intent: OpenWalletIntent = {\n  type: "openWithOptions",\n  options: {\n    settings: settings,\n  },\n};\n\nconst wallet = sequence.getWallet();\n\nconst path = "wallet/add-funds";\nwallet.openWallet(path, intent);\n'})}),"\n",(0,s.jsx)(n.admonition,{title:"Check out some example Dapp source code",type:"tip",children:(0,s.jsxs)(n.p,{children:["For a complete examples, see ",(0,s.jsx)(n.a,{href:"https://github.com/0xsequence/demo-dapp",children:"Demo-Dapp"})," and ",(0,s.jsx)(n.a,{href:"https://github.com/0xsequence/demo-dapp-web3modal",children:"Demo-Dapp-Web3Modal"}),"."]})}),"\n",(0,s.jsxs)(n.admonition,{title:"Avoid Browsers Blocking Sequence Popup",type:"caution",children:[(0,s.jsxs)(n.p,{children:["Most browsers will block popups if they are called outside of user-triggered event handlers like ",(0,s.jsx)(n.code,{children:"onclick"}),", or when it takes too long to process between the user action and the actual window"]}),(0,s.jsxs)(n.p,{children:["Read more about browser popup-blocking ",(0,s.jsx)(n.a,{href:"https://javascript.info/popup-windows#popup-blocking",children:"here"}),"."]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Sequence on-demand sign in",src:t(5725).Z+"",width:"1641",height:"903"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Sequence on-demand sign in, connect",src:t(2869).Z+"",width:"1349",height:"720"})}),"\n",(0,s.jsx)(n.h2,{id:"wallet-login-and-connect-options",children:"Wallet Login and Connect Options"}),"\n",(0,s.jsxs)(n.p,{children:["Dapps with direct sequence integration can specify a ",(0,s.jsx)(n.code,{children:"ConnectOptions"})," object when running ",(0,s.jsx)(n.code,{children:"wallet.connect()"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"const connectDetails = await wallet.connect(connectOptions)\n"})}),"\n",(0,s.jsx)(n.p,{children:"The option parameters are described below."}),"\n",(0,s.jsx)(n.h4,{id:"app",children:(0,s.jsx)(n.strong,{children:"app"})}),"\n",(0,s.jsx)(n.p,{children:"App name of the dapp which will be announced to user on connect screen."}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"await wallet.connect({ app: 'My defi app' })"})]}),"\n",(0,s.jsx)(n.h4,{id:"appprotocol",children:(0,s.jsx)(n.strong,{children:"appProtocol"})}),"\n",(0,s.jsx)(n.p,{children:"Custom protocol for auth redirect (unity/unreal)."}),"\n",(0,s.jsx)(n.h4,{id:"origin",children:(0,s.jsx)(n.strong,{children:"origin"})}),"\n",(0,s.jsx)(n.p,{children:"Origin hint of the dapp's host opening the wallet. This value will automatically be determined and verified for integrity, and can be omitted."}),"\n",(0,s.jsx)(n.h4,{id:"expiry",children:(0,s.jsx)(n.strong,{children:"expiry"})}),"\n",(0,s.jsx)(n.p,{children:"Expiry number (in seconds) that is used for ETHAuth proof. Default is 1 week in seconds."}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"await wallet.connect({ expiry: 36000 })"})]}),"\n",(0,s.jsx)(n.h4,{id:"authorize",children:(0,s.jsx)(n.strong,{children:"authorize"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"authorize"})," will perform an ETHAuth eip712 signing and return the proof to the dapp."]}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"await wallet.connect({ authorize: true })"})]}),"\n",(0,s.jsx)(n.h4,{id:"authorizenonce",children:(0,s.jsx)(n.strong,{children:"authorizeNonce"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"authorizeNonce"})," is an optional number to be passed as ETHAuth's nonce claim for replay protection."]}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"await wallet.connect({ authorizeNonce: 123 })"})]}),"\n",(0,s.jsx)(n.h4,{id:"refresh",children:(0,s.jsx)(n.strong,{children:"refresh"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"refresh"})," flag will force a full re-connect (ie. disconnect then connect again)."]}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"await wallet.connect({ refresh: true })"})]}),"\n",(0,s.jsx)(n.h4,{id:"keepwalletopened",children:(0,s.jsx)(n.strong,{children:"keepWalletOpened"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"keepWalletOpened"})," will keep the wallet window open after connecting. The default is to automatically close the wallet after connecting."]}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"await wallet.connect({ keepWalletOpened: true })"})]}),"\n",(0,s.jsx)(n.h4,{id:"askforemail",children:(0,s.jsx)(n.strong,{children:"askForEmail"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"askForEmail"})," will ask user whether they want to share the email they use to sign in to wallet while connecting, and will be returned in ",(0,s.jsx)(n.code,{children:"connectDetails"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"await wallet.connect({ askForEmail: true })"})]}),"\n",(0,s.jsx)(n.h4,{id:"settingstheme",children:(0,s.jsx)(n.strong,{children:"settings.theme"})}),"\n",(0,s.jsx)(n.p,{children:"Name of one of the available theme provided by sequence the sequence wallet will be rendered with."}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:'await wallet.connect({ settings: {theme: "light"}}'})]}),"\n",(0,s.jsx)(n.h4,{id:"settingsbannerurl",children:(0,s.jsx)(n.strong,{children:"settings.bannerUrl"})}),"\n",(0,s.jsx)(n.p,{children:"URL of a banner image users will see when connecting or logging into your dapp. The banner image should follow a 3:1 aspect ration where 1200x400 works best."}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:'await wallet.connect({ settings: {bannerUrl: "https://yoursite.com/banner-image.png"}}'})]}),"\n",(0,s.jsx)(n.h4,{id:"settingssigninwith",children:(0,s.jsx)(n.strong,{children:"settings.signInWith"})}),"\n",(0,s.jsxs)(n.p,{children:["Specify ",(0,s.jsx)(n.code,{children:"signInWith"})," with a supported auth provider to automatically sign in the user with that provider only. Will be ignored if user is already signed in."]}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:'await wallet.connect({ settings: {signInWith: "google"}}'})]}),"\n",(0,s.jsx)(n.p,{children:'Supported Providers: "google", "discord", "twitch", "apple", "facebook"'}),"\n",(0,s.jsx)(n.h4,{id:"settingssigninwithemail",children:(0,s.jsx)(n.strong,{children:"settings.signInWithEmail"})}),"\n",(0,s.jsx)(n.p,{children:"Specify signInWithEmail with an email address to allow user automatically sign in with the email option. Will be ignored if user is already signed in."}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:'await wallet.connect({ settings: {signInWithEmail: "user@email.com"}}'})]}),"\n",(0,s.jsx)(n.h4,{id:"settingssigninoptions",children:(0,s.jsx)(n.strong,{children:"settings.signInOptions"})}),"\n",(0,s.jsx)(n.p,{children:"Specify signInOptions to pick/limit the available sign in options. Will be ignored if user is already signed in."}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:'await wallet.connect({ settings: {signInOptions: ["email", "google", "apple"]}}'})]}),"\n",(0,s.jsx)(n.h4,{id:"settingsincludedpaymentproviders",children:(0,s.jsx)(n.strong,{children:"settings.includedPaymentProviders"})}),"\n",(0,s.jsx)(n.p,{children:"List of payment providers users will be able to access. By default, users can access all payment providers integrated in Sequence."}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:'await wallet.connect({ settings: {includedPaymentProviders: ["moonpay", "ramp"]}}'})]}),"\n",(0,s.jsx)(n.h4,{id:"settingsdefaultfundingcurrency",children:(0,s.jsx)(n.strong,{children:"settings.defaultFundingCurrency"})}),"\n",(0,s.jsx)(n.p,{children:"The tag of the default currency to show when users open the payment provider page. The currency has to be supported by the payment providers integrated in sequence."}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:'await wallet.connect({ settings: {defaultFundingCurrency: "usdc"}}'})]}),"\n",(0,s.jsx)(n.h4,{id:"settingsdefaultpurchaseamount",children:(0,s.jsx)(n.strong,{children:"settings.defaultPurchaseAmount"})}),"\n",(0,s.jsx)(n.p,{children:"Use to specify a default purchase amount, as an integer, for prefilling the funding amount. If not specified, the default is 100."}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"await wallet.connect({ settings: {defaultPurchaseAmount: 200}}"})]}),"\n",(0,s.jsx)(n.h4,{id:"settingslockfundingcurrencytodefault",children:(0,s.jsx)(n.strong,{children:"settings.lockFundingCurrencyToDefault"})}),"\n",(0,s.jsxs)(n.p,{children:["Whether to only allow users to purchase the default currency specified by the ",(0,s.jsx)(n.code,{children:"defaultFundingCurrency"})," option. If set to false, users will also be able to purchase other tokens. locking the default funding currency can be useful to prevent users from purchasing the wrong currency or the currency on the wrong chain."]}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"await wallet.connect({ settings: {defaultFundingCurrency: true}}"})]}),"\n",(0,s.jsxs)(n.h2,{id:"connecting-your-dapp-with-web3js-or-ethersjs",children:["Connecting your dapp with ",(0,s.jsx)(n.code,{children:"web3.js"})," or ",(0,s.jsx)(n.code,{children:"ethers.js"})]}),"\n",(0,s.jsxs)(n.p,{children:["For a full example of a dapp which supports Sequence (on-demand + chrome extension), Metamask, and WalletConnect\nplease see the ",(0,s.jsx)(n.a,{href:"https://github.com/0xsequence/demo-dapp-web3modal",children:"Demo-Dapp-Web3Modal repo"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Sequence Web3Modal Integration",src:t(6208).Z+"",width:"1444",height:"914"})}),"\n",(0,s.jsx)(n.h2,{id:"connecting-to-any-ethereum-dapp-with-the-sequence-wallet-chrome-extension",children:"Connecting to any Ethereum dapp with the Sequence Wallet Chrome Extension"}),"\n",(0,s.jsxs)(n.p,{children:["Sequence Chrome Extension: ",(0,s.jsx)(n.a,{href:"https://chrome.google.com/webstore/detail/sequence-wallet/ocmccklecaalljlflmclidjeclpcpdim?hl=en",children:"Install"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Sequence Chrome Extension",src:t(8954).Z+"",width:"1479",height:"1108"})}),"\n",(0,s.jsxs)(n.h2,{id:"connecting-via-walletconnect",children:["Connecting via ",(0,s.jsx)(n.code,{children:"WalletConnect"})]}),"\n",(0,s.jsxs)(n.p,{children:["Sequence already supports connecting to dapps via ",(0,s.jsx)(n.a,{href:"https://walletconnect.com",children:"WalletConnect"}),".\nIf your dapp already supports WalletConnect, and you don't need Sequence-specific functionality, nothing more needs to be done.\nFrom the user's perspective, the WalletConnect flow behaves as follows."]}),"\n",(0,s.jsxs)(n.p,{children:["Taking ",(0,s.jsx)(n.a,{href:"https://app.uniswap.org",children:"Uniswap"})," as an example, the user is prompted to connect their wallet using one of multiple possible protocols."]}),"\n",(0,s.jsx)("img",{src:"/img/walletconnect/connect-wallet.png"}),"\n",(0,s.jsx)(n.p,{children:"The user selects the WalletConnect option."}),"\n",(0,s.jsx)("img",{src:"/img/walletconnect/select-walletconnect.png"}),"\n",(0,s.jsx)(n.p,{children:"A QR code is displayed, which can be scanned by Sequence.\nAlternatively, the user can also choose to copy the connection details via their OS clipboard."}),"\n",(0,s.jsx)("img",{src:"/img/walletconnect/qr-code.png"}),"\n",(0,s.jsx)(n.p,{children:'Back in the Sequence interface, the user chooses "Scan".'}),"\n",(0,s.jsx)("img",{src:"/img/walletconnect/scan-qr-code.png"}),"\n",(0,s.jsx)(n.p,{children:"The QR code from the dapp is scanned.\nAlternatively, the code is pasted from the OS clipboard if the user chose that previously."}),"\n",(0,s.jsx)("img",{src:"/img/walletconnect/scan.png"}),"\n",(0,s.jsx)(n.p,{children:"The user confirms the connection request."}),"\n",(0,s.jsx)("img",{src:"/img/walletconnect/confirm.png"}),"\n",(0,s.jsx)(n.p,{children:"The connection succeeded, and the dapp is updated to reflect that."}),"\n",(0,s.jsx)("img",{src:"/img/walletconnect/success.png"}),"\n",(0,s.jsx)(n.p,{children:"While connected, the dapp is able to make signing requests to Sequence.\nSequence will always prompt for confirmation from the user for any activity initiated by the dapp."}),"\n",(0,s.jsx)("img",{src:"/img/walletconnect/activity.png"}),"\n",(0,s.jsx)(n.p,{children:"Once the user has finished using the dapp, they can disconnect the wallet via the session menu."}),"\n",(0,s.jsx)("img",{src:"/img/walletconnect/disconnect.png"})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8954:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/seq-chrome-store-9334f18a83d3bfca818e3d3862d0156c.png"},2869:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/sign-in-connect-67c688a2579535c7373e3099be992ce7.png"},5725:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/sign-in-fresh-893d30bca3d4d7a94bcf694f6614105c.png"},6208:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/web3modal-e9639769538f42d9e60654eea840fd41.png"},7279:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>o});var s=t(959);const i={},l=s.createContext(i);function o(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);