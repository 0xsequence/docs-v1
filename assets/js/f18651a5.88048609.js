"use strict";(self.webpackChunk_0xsequence_docs=self.webpackChunk_0xsequence_docs||[]).push([[6761],{5641:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>x,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var s=t(1527),a=t(7279),r=t(370),c=t(1804);const o={sidebar_label:"Tokens API"},l="Tokens API",i={id:"indexer/fetch-tokens",title:"Tokens API",description:"Our Indexer service is now managed through Sequence Builder. Sign up to grab your API access key.",source:"@site/docs/200-indexer/03-fetch-tokens.mdx",sourceDirName:"200-indexer",slug:"/indexer/fetch-tokens",permalink:"/indexer/fetch-tokens",draft:!1,unlisted:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/200-indexer/03-fetch-tokens.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Tokens API"},sidebar:"sidebar",previous:{title:"Installation",permalink:"/indexer/installation"},next:{title:"Wallet transaction history",permalink:"/indexer/transaction-history"}},d={},u=[{value:"Fetches list of ERC20, ERC721 and ERC1155 tokens and metadata in any wallet.",id:"fetches-list-of-erc20-erc721-and-erc1155-tokens-and-metadata-in-any-wallet",level:3},{value:"Fetch token IDs, balances and metadata of ERC721 and ERC1155 collections.",id:"fetch-token-ids-balances-and-metadata-of-erc721-and-erc1155-collections",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h3:"h3",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"tokens-api",children:"Tokens API"}),"\n",(0,s.jsxs)(n.admonition,{type:"warning",children:[(0,s.jsxs)(n.mdxAdmonitionTitle,{children:["INTRODUCING THE SEQUENCE BUILDER - ",(0,s.jsx)(n.a,{href:"https://sequence.build",children:"https://sequence.build"})]}),(0,s.jsxs)(n.p,{children:["Our ",(0,s.jsx)(n.strong,{children:"Indexer"})," service is now managed through ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://sequence.build",children:"Sequence Builder"})}),". Sign up to grab your API access key."]}),(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.a,{href:"https://sequence.build",children:["Get started with the ",(0,s.jsx)(n.strong,{children:"Sequence Builder"})," Free Plan today!"]})})]}),"\n",(0,s.jsx)(n.h3,{id:"fetches-list-of-erc20-erc721-and-erc1155-tokens-and-metadata-in-any-wallet",children:"Fetches list of ERC20, ERC721 and ERC1155 tokens and metadata in any wallet."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:["Sequence Indexer ",(0,s.jsx)(n.code,{children:"GetTokenBalances"})," Method:"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Request: POST /rpc/Indexer/GetTokenBalances"}),"\n",(0,s.jsx)(n.li,{children:"Content-Type: application/json"}),"\n",(0,s.jsxs)(n.li,{children:["Body (in JSON):","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"accountAddress"})," (string) -- the wallet account address"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"includeMetadata"})," (boolean - optional - default: false) -- toggle token metadata to be included in the response"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"metadataOptions"})," (object - optional) -- additional options for metadata","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"verifiedOnly"})," (boolean - optional) -- return only contracts which are 'verified' to help reduce spam"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"includeContracts"})," ([]string - optional) -- list of specific contract addresses to always be included, even if verifiedOnly is enabled."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Example:\xa0",(0,s.jsx)(n.code,{children:"GetTokenBalances"}),"\xa0of a wallet account address on Polygon using an\xa0",(0,s.jsx)(n.code,{children:"API_Access_Key"})]})}),"\n",(0,s.jsxs)("strong",{style:{color:"#fff8e6",background:"#be8a05",fontSize:16},children:["This code requires an API Access Key from ",(0,s.jsx)("a",{href:"https://sequence.build",style:{color:"#fff8e6",background:"#be8a05"},children:(0,s.jsx)("u",{children:(0,s.jsx)(n.strong,{children:"Sequence Builder"})})}),"."]}),"\n",(0,s.jsxs)(r.Z,{children:[(0,s.jsx)(c.Z,{value:"curl",label:"curl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"class=wrap",children:'curl -X POST -H "Content-Type: application/json" -H "X-Access-Key: c3bgcU3LkFR9Bp9jFssLenPAAAAAAAAAA" https://polygon-indexer.sequence.app/rpc/Indexer/GetTokenBalances -d \'{ "accountAddress": "0x8e3E38fe7367dd3b52D1e281E4e8400447C8d8B9", "includeMetadata": true }\'\n'})})}),(0,s.jsx)(c.Z,{value:"js",label:"Javascript / Typescript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Works in both a Webapp (browser) or Node.js:\nimport { SequenceIndexer } from '@0xsequence/indexer'\n\nconst indexer = new SequenceIndexer('https://polygon-indexer.sequence.app', 'c3bgcU3LkFR9Bp9jFssLenPAAAAAAAAAA')\n\n// try any account address you'd like :)\nconst accountAddress = '0xabc...'\n\n// query Sequence Indexer for all token balances of the account on Polygon\nconst tokenBalances = await indexer.getTokenBalances({\n\taccountAddress: accountAddress,\n\tincludeMetadata: true\n})\nconsole.log('tokens in your account:', tokenBalances)\n"})})}),(0,s.jsx)(c.Z,{value:"golang",label:"Go",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'import (\n\t"context"\n\t"fmt"\n\t"log"\n\t"net/http"\n\n\t"github.com/0xsequence/go-sequence/indexer"\n)\n\nfunc GetTokenBalances(accountAddress string) {\n\tseqIndexer := indexer.NewIndexer("https://polygon-indexer.sequence.app", "c3bgcU3LkFR9Bp9jFssLenPAAAAAAAAAA")\n\n\tincludeMetadata := true\n\n\ttokenBalances, _, err := seqIndexer.GetTokenBalances(context.Background(), &accountAddress, nil, &includeMetadata, nil)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tfmt.Println("tokenBalances:", tokenBalances)\n}\n'})})}),(0,s.jsx)(c.Z,{value:"other",label:"Other",children:(0,s.jsxs)(n.p,{children:["Please ",(0,s.jsx)(n.a,{href:"/support",children:"contact our team"})," for assistance with integrations to another target."]})})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.admonition,{title:"PRO TIP: fetching ERC721/1155 token IDs",type:"info",children:(0,s.jsxs)(n.p,{children:["You'll notice that, by default, ",(0,s.jsx)(n.code,{children:"GetTokenBalances"})," will return at most one token instance from each contract.\nIn order to fetch ERC721/1155 token balances, you must pass the ",(0,s.jsx)(n.code,{children:"contractAddress"})," to the ",(0,s.jsx)(n.code,{children:"GetTokenBalances"})," method.\nThis will return all of the tokens owned by ",(0,s.jsx)(n.code,{children:"accountAddress"})," from the specified ",(0,s.jsx)(n.code,{children:"contractAddress"}),".\nSee section below for more information."]})}),"\n",(0,s.jsx)(n.h3,{id:"fetch-token-ids-balances-and-metadata-of-erc721-and-erc1155-collections",children:"Fetch token IDs, balances and metadata of ERC721 and ERC1155 collections."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:["Sequence Indexer ",(0,s.jsx)(n.code,{children:"GetTokenBalances"})," Method:"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Request: POST /rpc/Indexer/GetTokenBalances"}),"\n",(0,s.jsx)(n.li,{children:"Content-Type: application/json"}),"\n",(0,s.jsxs)(n.li,{children:["Body (in JSON):","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"accountAddress"})," (string) -- the wallet account address"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"contractAddress"})," (string) -- the contract address of the ERC721 / ERC1155 collection"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"includeMetadata"})," (boolean - optional - default: false) -- toggle token metadata to be included in the response"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"metadataOptions"})," (object - optional) -- additional options for metadata","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"verifiedOnly"})," (boolean - optional) -- return only contracts which are 'verified' to help reduce spam"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"includeContracts"})," ([]string - optional) -- list of specific contract addresses to always be included, even if verifiedOnly is enabled."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Example:\xa0",(0,s.jsx)(n.code,{children:"GetTokenBalances"}),"\xa0of a contract + account address on Polygon using an\xa0",(0,s.jsx)(n.code,{children:"c3bgcU3LkFR9Bp9jFssLenPAAAAAAAAAA"})]})}),"\n",(0,s.jsxs)("strong",{style:{color:"#fff8e6",background:"#be8a05",fontSize:16},children:["This code requires an API Access Key from ",(0,s.jsx)("a",{href:"https://sequence.build",style:{color:"#fff8e6",background:"#be8a05"},children:(0,s.jsx)("u",{children:(0,s.jsx)(n.strong,{children:"Sequence Builder"})})}),"."]}),"\n",(0,s.jsxs)(r.Z,{children:[(0,s.jsx)(c.Z,{value:"curl",label:"curl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"class=wrap",children:'curl -X POST -H "Content-Type: application/json" -H "X-Access-Key: c3bgcU3LkFR9Bp9jFssLenPAAAAAAAAAA" https://polygon-indexer.sequence.app/rpc/Indexer/GetTokenBalances -d \'{ "contractAddress": "0x631998e91476DA5B870D741192fc5Cbc55F5a52E", "accountAddress": "0x8e3E38fe7367dd3b52D1e281E4e8400447C8d8B9", "includeMetadata": true }\'\n'})})}),(0,s.jsx)(c.Z,{value:"js",label:"Javascript / Typescript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Works in both a Webapp (browser) or Node.js:\nimport { SequenceIndexer } from '@0xsequence/indexer'\n\nconst indexer = new SequenceIndexer('https://polygon-indexer.sequence.app', 'c3bgcU3LkFR9Bp9jFssLenPAAAAAAAAAA')\n\n// try any contract and account address you'd like :)\nconst contractAddress = '0x631998e91476DA5B870D741192fc5Cbc55F5a52E'\nconst accountAddress = '0xabc...'\n\n// query Sequence Indexer for all nft balances of the account on Polygon\nconst nftBalances = await indexer.getTokenBalances({\n\tcontractAddress: contractAddress,\n\taccountAddress: accountAddress,\n\tincludeMetadata: true\n})\n\nconsole.log('collection of items:', nftBalances)\n"})})}),(0,s.jsx)(c.Z,{value:"golang",label:"Go",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'import (\n\t"context"\n\t"fmt"\n\t"log"\n\t"net/http"\n\n\t"github.com/0xsequence/go-sequence/indexer"\n)\n\nfunc GetTokenBalances(contractAddress, accountAddress string) {\n\tseqIndexer := indexer.NewIndexer("https://polygon-indexer.sequence.app", "c3bgcU3LkFR9Bp9jFssLenPAAAAAAAAAA")\n\n\tincludeMetadata := true\n\n\tnftBalances, _, err := seqIndexer.GetTokenBalances(context.Background(), &accountAddress, &contractAddress, &includeMetadata, nil)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tfmt.Println("nftBalances:", nftBalances)\n}\n'})})}),(0,s.jsx)(c.Z,{value:"other",label:"Other",children:(0,s.jsxs)(n.p,{children:["Please ",(0,s.jsx)(n.a,{href:"/support",children:"contact our team"})," for assistance with integrations to another target."]})})]})]})}function x(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},1804:(e,n,t)=>{t.d(n,{Z:()=>c});t(959);var s=t(5924);const a={tabItem:"tabItem_l_5p"};var r=t(1527);function c(e){let{children:n,hidden:t,className:c}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.Z)(a.tabItem,c),hidden:t,children:n})}},370:(e,n,t)=>{t.d(n,{Z:()=>y});var s=t(959),a=t(5924),r=t(74),c=t(8903),o=t(331),l=t(4053),i=t(3608),d=t(7979);function u(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:a}}=e;return{value:n,label:t,attributes:s,default:a}}))}(t);return function(e){const n=(0,i.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function x(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:t}=e;const a=(0,c.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l._X)(r),(0,s.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})}),[r,a])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,r=h(e),[c,l]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!x({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:r}))),[i,u]=p({queryString:t,groupId:a}),[f,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,r]=(0,d.Nk)(t);return[a,(0,s.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:a}),j=(()=>{const e=i??f;return x({value:e,tabValues:r})?e:null})();(0,o.Z)((()=>{j&&l(j)}),[j]);return{selectedValue:c,selectValue:(0,s.useCallback)((e=>{if(!x({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),b(e)}),[u,b,r]),tabValues:r}}var b=t(9506);const j={tabList:"tabList_Pq82",tabItem:"tabItem_kpXA"};var m=t(1527);function g(e){let{className:n,block:t,selectedValue:s,selectValue:c,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:i}=(0,r.o5)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),a=o[t].value;a!==s&&(i(n),c(a))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,m.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>l.push(e),onKeyDown:u,onClick:d,...r,className:(0,a.Z)("tabs__item",j.tabItem,r?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function A(e){let{lazy:n,children:t,selectedValue:a}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===a));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function k(e){const n=f(e);return(0,m.jsxs)("div",{className:(0,a.Z)("tabs-container",j.tabList),children:[(0,m.jsx)(g,{...e,...n}),(0,m.jsx)(A,{...e,...n})]})}function y(e){const n=(0,b.Z)();return(0,m.jsx)(k,{...e,children:u(e.children)},String(n))}},7279:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>c});var s=t(959);const a={},r=s.createContext(a);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);