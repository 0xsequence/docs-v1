"use strict";(self.webpackChunk_0xsequence_docs=self.webpackChunk_0xsequence_docs||[]).push([[2975],{4117:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=t(1527),a=t(7279);const r={},c="Sending a Batch of Transactions",o={id:"wallet/guides/send-batch-transactions",title:"Sending a Batch of Transactions",description:"Likewise, bundling multiple transactions to be sent in a single native transaction is equally as easy:",source:"@site/docs/150-wallet/04-guides/09-send-batch-transactions.mdx",sourceDirName:"150-wallet/04-guides",slug:"/wallet/guides/send-batch-transactions",permalink:"/wallet/guides/send-batch-transactions",draft:!1,unlisted:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/150-wallet/04-guides/09-send-batch-transactions.mdx",tags:[],version:"current",sidebarPosition:9,frontMatter:{},sidebar:"sidebar",previous:{title:"Sending ERC-1155 (Collectible) Tokens",permalink:"/wallet/guides/send-erc1155"},next:{title:"Building Backends with Sequence",permalink:"/wallet/guides/building-backends"}},i={},d=[];function l(n){const e={code:"code",h1:"h1",p:"p",pre:"pre",...(0,a.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"sending-a-batch-of-transactions",children:"Sending a Batch of Transactions"}),"\n",(0,s.jsx)(e.p,{children:"Likewise, bundling multiple transactions to be sent in a single native transaction is equally as easy:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"const transaction1 = {\n  to: recipient1Address,\n  value: 1000000000000000000\n}\n\nconst transaction2 = {\n  to: recipient2Address,\n  value: 1000000000000000000\n}\n\nconst signer = wallet.getSigner()\nconst response = await signer.sendTransaction([transaction1, transaction2])\nconsole.log(response)\n"})}),"\n",(0,s.jsx)(e.p,{children:"The transactions don't have to be the same token or even token standard either.\nYou can mix and match:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"const erc20Interface = new ethers.utils.Interface([\n  'function transfer(address _to, uint256 _value)'\n])\nconst erc721Interface = new ethers.utils.Interface([\n  'function safeTransferFrom(address _from, address _to, uint256 _tokenId)'\n])\nconst erc1155Interface = new ethers.utils.Interface([\n  'function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data)'\n])\n\nconst erc20Data = erc20Interface.encodeFunctionData(\n  'transfer', [recipient2Address, amount2]\n)\nconst erc721Data = erc721Interface.encodeFunctionData(\n  'safeTransferFrom', [address, recipient3Address, amount3]\n)\nconst erc1155Data = erc1155Interface.encodeFunctionData(\n  'safeTransferFrom', [address, recipient4Address, token4Id, amount4, '0x']\n)\n\nconst transactions = [\n  { to: recipient1Address, value: '1000000000000000000' },\n  { to: daiContractAddress, data: erc20Data },\n  { to: erc721ContractAddress, data: erc721Data },\n  { to: erc1155ContractAddress, data: erc1155Data }\n]\n\nconst signer = wallet.getSigner()\nconst response = await signer.sendTransaction(transactions)\nconsole.log(response)\n"})})]})}function u(n={}){const{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(l,{...n})}):l(n)}},7279:(n,e,t)=>{t.d(e,{Z:()=>o,a:()=>c});var s=t(959);const a={},r=s.createContext(a);function c(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:c(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);