"use strict";(self.webpackChunk_0xsequence_docs=self.webpackChunk_0xsequence_docs||[]).push([[2960],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4923:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const r={sidebar_label:"Using RainbowKit"},i="Using RainbowKit",l={unversionedId:"wallet/connectors/rainbow-kit",id:"wallet/connectors/rainbow-kit",title:"Using RainbowKit",description:"The Sequence wallet can be added to RainbowKit through the connector.",source:"@site/docs/03-wallet/05-connectors/02-rainbow-kit.mdx",sourceDirName:"03-wallet/05-connectors",slug:"/wallet/connectors/rainbow-kit",permalink:"/wallet/connectors/rainbow-kit",draft:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/03-wallet/05-connectors/02-rainbow-kit.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Using RainbowKit"},sidebar:"sidebar",previous:{title:"Using Wagmi",permalink:"/wallet/connectors/wagmi"},next:{title:"Using Web3 Modal",permalink:"/wallet/connectors/web3modal"}},s={},p=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:2},{value:"chains",id:"chains",level:3},{value:"connect (optional)",id:"connect-optional",level:3},{value:"defaultNetwork (optional)",id:"defaultnetwork-optional",level:3},{value:"Using NextJs",id:"using-nextjs",level:2},{value:"Using older versions of Wagmi (&lt;= 0.12.x)",id:"using-older-versions-of-wagmi--012x",level:2},{value:"Examples",id:"examples",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"using-rainbowkit"},"Using RainbowKit"),(0,o.kt)("p",null,"The Sequence wallet can be added to RainbowKit through the connector."),(0,o.kt)("admonition",{title:"Try it live :)",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Try ",(0,o.kt)("a",{parentName:"p",href:"https://0xsequence.github.io/demo-dapp-rainbowkit/"},"a live Dapp example")," using Sequence + Metamask + Rainbow + Wallet Connect with RainbowKit."),(0,o.kt)("p",{parentName:"admonition"},"Source code is available too: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/demo-dapp-rainbowkit"},"https://github.com/0xsequence/demo-dapp-rainbowkit"))),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"The connector is installed via the npm package ",(0,o.kt)("inlineCode",{parentName:"p"},"@0xsequence/rainbowkit-plugin"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @0xsequence/rainbowkit-plugin 0xsequence ethers\n")),(0,o.kt)("p",null,"or"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add @0xsequence/rainbowkit-plugin 0xsequence ethers\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"The connector is then imported and added to the list of connectors alongside the other RainbowKit wallets."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { sequenceWallet } from '@0xsequence/rainbowkit-plugin'\nimport { connectorsForWallets } from '@rainbow-me/rainbowkit';\n\nconst connectors = connectorsForWallets([\n  {\n    groupName: 'Recommended',\n    wallets: [\n      sequenceWallet({\n        chains,\n        defaultNetwork: 'polygon',\n        connect: {\n          app: 'Demo-app'\n        }\n      }),\n      ...otherRainbowKitWallets\n    ]\n  }\n\n")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("h3",{id:"chains"},"chains"),(0,o.kt)("p",null,"Chains supported by app. This is the same parameter as would be passed to other RainbowKit wallets."),(0,o.kt)("h3",{id:"connect-optional"},"connect (optional)"),(0,o.kt)("p",null,"Connect options for Sequence, including the name of the app and the default network id the wallet will attempt connection to.\nA more in depth description of the connect options is available ",(0,o.kt)("a",{parentName:"p",href:"/wallet/guides/connect-wallet#wallet-login-and-connect-options"},"here"),"."),(0,o.kt)("h3",{id:"defaultnetwork-optional"},"defaultNetwork (optional)"),(0,o.kt)("p",null,"The default network to connect to. Sequence will default all operations to this network. It can also be defined using a number (e.g. 1 for Mainnet, 5 for Goerli, etc...)."),(0,o.kt)("h2",{id:"using-nextjs"},"Using NextJs"),(0,o.kt)("p",null,"There are special considerations to take into account when using NextJs with Wagmi-based libraries like RainbowKit, such that it functions harmoniously with the server-side rendering of NextJs.\nThe correct technique to use differs depending on whether the application uses the older ",(0,o.kt)("inlineCode",{parentName:"p"},"pages")," router or the more recent ",(0,o.kt)("inlineCode",{parentName:"p"},"app")," router."),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"https://docs.sequence.xyz/wallet/connectors/FAQ/#how-do-i-use-a-wallet-library-and-connector-with-nextjs-using-the-app-directory-version-13-and-above-only"},"this section")," for an explanation on using Wagmi or Wagmi-based libraries with ",(0,o.kt)("inlineCode",{parentName:"p"},"app")," router.",(0,o.kt)("br",{parentName:"p"}),"\n","See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/demo-dapp-wagmi-next/tree/use-client-method"},"the example app")," which uses the ",(0,o.kt)("inlineCode",{parentName:"p"},"app")," router structure.  "),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"https://docs.sequence.xyz/wallet/connectors/FAQ/#how-do-i-use-a-wallet-library-and-connector-with-nextjs-using-the-pages-directory-all-versions-of-nextjs"},"this section")," for an explanation on using Wagmi or Wagmi-based libraries with ",(0,o.kt)("inlineCode",{parentName:"p"},"pages")," router.",(0,o.kt)("br",{parentName:"p"}),"\n","See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/demo-dapp-wagmi-next/tree/mount-hook"},"the example app")," which uses the ",(0,o.kt)("inlineCode",{parentName:"p"},"pages")," router structure.  "),(0,o.kt)("h2",{id:"using-older-versions-of-wagmi--012x"},"Using older versions of Wagmi (<= 0.12.x)"),(0,o.kt)("p",null,"If you are using an older version of Wagmi (<= 0.12.x), which is based on ethers instead of viem, use the following command to install the appropriate version of the wagmi connector:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @0xsequence/wagmi-connector@1.0 0xsequence ethers\n")),(0,o.kt)("p",null,"or"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add @0xsequence/wagmi-connector@1.0 0xsequence ethers\n")),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("p",null,"A demo app for RainbowKit is available ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/demo-dapp-rainbowkit"},"here")),(0,o.kt)("p",null,"A demo app for NextJs + Wagmi (which is applicable for wagmi-based libraries) with the ",(0,o.kt)("inlineCode",{parentName:"p"},"app")," router structure ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/demo-dapp-wagmi-next/tree/use-client-method"},"here"),".",(0,o.kt)("br",{parentName:"p"}),"\n","A demo app for NextJs + Wagmi (which is applicable for wagmi-based libraries) with the older ",(0,o.kt)("inlineCode",{parentName:"p"},"pages")," router structure ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/demo-dapp-wagmi-next/tree/mount-hook"},"here"),"."))}u.isMDXComponent=!0}}]);