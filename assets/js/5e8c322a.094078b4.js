"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7597],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},87926:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={id:"index",title:"0xsequence",sidebar_label:"Readme",sidebar_position:0,custom_edit_url:null},i="0xsequence",l={unversionedId:"api/index",id:"api/index",title:"0xsequence",description:"Install",source:"@site/docs/api/index.md",sourceDirName:"api",slug:"/api/",permalink:"/api/",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"index",title:"0xsequence",sidebar_label:"Readme",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"Community & Support",permalink:"/community-support"},next:{title:"Exports",permalink:"/api/modules"}},s={},p=[{value:"Install",id:"install",level:2},{value:"Development Workflow",id:"development-workflow",level:2},{value:"Running E2E Tests",id:"running-e2e-tests",level:2},{value:"From Browser",id:"from-browser",level:3},{value:"From CLI",id:"from-cli",level:3}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"0xsequence"},"0xsequence"),(0,o.kt)("h2",{id:"install"},"Install"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"yarn add 0xsequence\n")),(0,o.kt)("h2",{id:"development-workflow"},"Development Workflow"),(0,o.kt)("p",null,"Sequence is a critical piece of software and any change should be delivered via a TDD (test-driven development)\nworkflow. "),(0,o.kt)("p",null,"As well, sequence.js's monorepo tooling is setup with preconstruct, which links all sub-packages together\nso it feels like a single program and is easy to work with. Please run ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn dev")," in the root of ",(0,o.kt)("inlineCode",{parentName:"p"},"sequence.js/"),"\nfolder to ensure the monorepo is in 'dev-mode'."),(0,o.kt)("p",null,"Second, you can run the test suite directly from console with a single ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn test"),", or you can boot up the Typescript\ncompiling server (",(0,o.kt)("inlineCode",{parentName:"p"},"yarn test:server"),") and ethereum test node (",(0,o.kt)("inlineCode",{parentName:"p"},"yarn start:hardhat")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn start:hardhat2"),") manually\nin separate terminals, and then run a specific test directly from your browser instance. We recommend running the\ntest stack separately and running specific browser tests manually during development. See ",(0,o.kt)("a",{parentName:"p",href:"./#from-browser"},"here for recommended setup"),"."),(0,o.kt)("h2",{id:"running-e2e-tests"},"Running E2E Tests"),(0,o.kt)("p",null,"This 0xsequence top-level package contains e2e tests which run in a headless chrome browser."),(0,o.kt)("p",null,"You can view tests running directly from the browser directly, or from the cli which will communicate\nto the headless browser behind the scenes. See below. Please note, for an improved development workflow\nwe highly recommend to view your tests running from the browser as its more clear and better experience."),(0,o.kt)("h3",{id:"from-browser"},"From Browser"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"yarn test:server")," -- in one terminal, to start the webpack server compiling typescript"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"yarn start:hardhat")," -- in a second terminal, to start hardhat local ethereum test node"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"yarn start:hardhat2")," -- (2nd chain) in a third terminal, to start hardhat2 local ethereum test node"),(0,o.kt)("li",{parentName:"ol"},"open browser to ",(0,o.kt)("inlineCode",{parentName:"li"},"http://localhost:9999/{browser-test-dir}/{test-filename}.test.html")," for example,\nhttp://localhost:9999/wallet-provider/dapp.test.html"),(0,o.kt)("li",{parentName:"ol"},"open your browser console so you can see the tests running and their results.")),(0,o.kt)("p",null,'Finally, if you\'d like to run only a specific test case, either add a temporary "return" statement\nfollowing the last test case, so you will preempt the runner after a certain test case.'),(0,o.kt)("p",null,"As well, since you have all the services running in terminals, you can also execute commands via\nthe cli by calling ",(0,o.kt)("inlineCode",{parentName:"p"},"test:run"),", which is similar to step 4 above, but executing all tests from the terminal.\nThere is also the ",(0,o.kt)("inlineCode",{parentName:"p"},"test:only")," command if you'd like to execute a specific test from ./tests/browser/*.spec.ts\nfile, ie. ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn test:only window-transport"),"."),(0,o.kt)("h3",{id:"from-cli"},"From CLI"),(0,o.kt)("p",null,"With a single command, you can spin up the testing stack and execute tests:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"yarn test")),(0,o.kt)("p",null,"This is useful for a sanity check to ensure tests pass, or using it with the CI. However, if you're\ndeveloping on sequence.js, its highly recommended you follow the ",(0,o.kt)("a",{parentName:"p",href:"./#development-workflow"},"development workflow instructions"),"."))}u.isMDXComponent=!0}}]);