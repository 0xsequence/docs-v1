"use strict";(self.webpackChunk_0xsequence_docs=self.webpackChunk_0xsequence_docs||[]).push([[9436],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),i=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=i(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=i(n),g=r,m=p["".concat(s,".").concat(g)]||p[g]||d[g]||l;return n?a.createElement(m,o(o({ref:t},u),{},{components:n})):a.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=g;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:r,o[1]=c;for(var i=2;i<l;i++)o[i]=n[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},7036:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>i});var a=n(7462),r=(n(7294),n(3905));const l={slug:"/quickstart"},o="Quick Start",c={unversionedId:"getting-started/quickstart",id:"getting-started/quickstart",title:"Quick Start",description:"Get started with Sequence with just a few lines of code, follow along below.",source:"@site/docs/02-getting-started/01-quickstart.mdx",sourceDirName:"02-getting-started",slug:"/quickstart",permalink:"/quickstart",draft:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/02-getting-started/01-quickstart.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/quickstart"},sidebar:"sidebar",previous:{title:"Getting Started",permalink:"/getting-started"},next:{title:"Signing Messages",permalink:"/getting-started/sign-message"}},s={},i=[{value:"Install",id:"install",level:2},{value:"Connect your wallet",id:"connect-your-wallet",level:2},{value:"Get the wallet address",id:"get-the-wallet-address",level:2},{value:"Open the wallet from your dapp",id:"open-the-wallet-from-your-dapp",level:2},{value:"Get the blockchain network ID",id:"get-the-blockchain-network-id",level:2}],u={toc:i};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"quick-start"},"Quick Start"),(0,r.kt)("p",null,"Get started with Sequence with just a few lines of code, follow along below."),(0,r.kt)("h2",{id:"install"},"Install"),(0,r.kt)("p",null,"First, install the ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/0xsequence"},"0xsequence")," and ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/ethers"},"ethers")," packages from NPM:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm install 0xsequence ethers\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm install 0xsequence ethers\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"yarn add 0xsequence ethers\n")),(0,r.kt)("p",null,"You can find the source of the ",(0,r.kt)("inlineCode",{parentName:"p"},"0xsequence")," package on ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/sequence.js"},"Github"),"."),(0,r.kt)("h2",{id:"connect-your-wallet"},"Connect your wallet"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Connecting to Ethereum Mainnet:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { sequence } from '0xsequence'\n\nconst wallet = sequence.initWallet('mainnet')\nconst connectDetails = await wallet.connect()\n\nconsole.log('=> connected?', connectDetails.connected)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Connecting to Polygon:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { sequence } from '0xsequence'\n\nconst wallet = sequence.initWallet('polygon')\nconst connectDetails = await wallet.connect()\n\nconsole.log('=> connected?', connectDetails.connected)\n")),(0,r.kt)("h2",{id:"get-the-wallet-address"},"Get the wallet address"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const wallet = sequence.getWallet()\nconst walletAddress = await wallet.getAddress()\n\nconsole.log(walletAddress)\n// # => '0xabcd....'\n")),(0,r.kt)("h2",{id:"open-the-wallet-from-your-dapp"},"Open the wallet from your dapp"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const wallet = sequence.getWallet()\nwallet.openWallet()\n")),(0,r.kt)("h2",{id:"get-the-blockchain-network-id"},"Get the blockchain network ID"),(0,r.kt)("p",null,"You can use a variety of methods to query the chain ID which the wallet is presently\nconnected to."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const wallet = sequence.getWallet()\n\nconsole.log('chainId:', await wallet.getChainId())\n\nconst provider = wallet.getProvider()\nconsole.log('provider.getChainId()', await provider.getChainId())\n\nconst signer = wallet.getSigner()\nconsole.log('signer.getChainId()', await signer.getChainId())\n")))}p.isMDXComponent=!0}}]);