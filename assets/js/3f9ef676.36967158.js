"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2960],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,b=d["".concat(c,".").concat(m)]||d[m]||u[m]||r;return n?a.createElement(b,i(i({ref:t},p),{},{components:n})):a.createElement(b,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4923:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var a=n(7462),o=(n(7294),n(3905));const r={sidebar_label:"Using RainbowKit"},i="Using RainbowKit",l={unversionedId:"wallet/connectors/rainbow-kit",id:"wallet/connectors/rainbow-kit",title:"Using RainbowKit",description:"The Sequence wallet can be added to RainbowKit through the connector.",source:"@site/docs/03-wallet/05-connectors/02-rainbow-kit.mdx",sourceDirName:"03-wallet/05-connectors",slug:"/wallet/connectors/rainbow-kit",permalink:"/wallet/connectors/rainbow-kit",draft:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/03-wallet/05-connectors/02-rainbow-kit.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Using RainbowKit"},sidebar:"sidebar",previous:{title:"Using Wagmi",permalink:"/wallet/connectors/wagmi"},next:{title:"Using Web3 Modal",permalink:"/wallet/connectors/web3modal"}},c={},s=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:2},{value:"chains",id:"chains",level:3},{value:"connect (optional)",id:"connect-optional",level:3},{value:"Example",id:"example",level:2}],p={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"using-rainbowkit"},"Using RainbowKit"),(0,o.kt)("p",null,"The Sequence wallet can be added to RainbowKit through the connector."),(0,o.kt)("admonition",{title:"Try it live :)",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Try ",(0,o.kt)("a",{parentName:"p",href:"https://0xsequence.github.io/demo-dapp-rainbowkit/"},"a live Dapp example")," using Sequence + Metamask + Rainbow + Wallet Connect with RainbowKit."),(0,o.kt)("p",{parentName:"admonition"},"Source code is available too: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/demo-dapp-rainbowkit"},"https://github.com/0xsequence/demo-dapp-rainbowkit"))),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"The connector is installed via the npm package ",(0,o.kt)("inlineCode",{parentName:"p"},"@0xsequence/rainbowkit-plugin"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @0xsequence/rainbowkit-plugin 0xsequence ethers\n")),(0,o.kt)("p",null,"or"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add @0xsequence/rainbowkit-plugin 0xsequence ethers\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"The connector is then imported and added to the list of connectors alongside the other RainbowKit wallets."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { sequenceWallet } from '@0xsequence/rainbowkit-plugin'\nimport { connectorsForWallets } from '@rainbow-me/rainbowkit';\n\nconst connectors = connectorsForWallets([\n  {\n    groupName: 'Recommended',\n    wallets: [\n      sequenceWallet({\n        chains,\n        connect: {\n          app: 'Demo-app',\n          networkId: 137\n        }\n      }),\n      ...otherRainbowKitWallets\n    ]\n  }\n\n")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("h3",{id:"chains"},"chains"),(0,o.kt)("p",null,"Chains supported by app. This is the same parameter as would be passed to other RainbowKit wallets."),(0,o.kt)("h3",{id:"connect-optional"},"connect (optional)"),(0,o.kt)("p",null,"Connect options for Sequence, including the name of the app and the default network id the wallet will attempt connection to.\nA more in depth description of the connect options is available ",(0,o.kt)("a",{parentName:"p",href:"/wallet/guides/connect-wallet#wallet-login-and-connect-options"},"here"),"."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"A demo app for RainbowKit is available ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/demo-dapp-rainbowkit"},"here")))}u.isMDXComponent=!0}}]);