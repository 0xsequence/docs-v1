"use strict";(self.webpackChunk_0xsequence_docs=self.webpackChunk_0xsequence_docs||[]).push([[9575],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(r),f=a,m=p["".concat(s,".").concat(f)]||p[f]||y[f]||o;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7048:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={slug:"/relayer"},i="Relayer",c={unversionedId:"relayer/overview",id:"relayer/overview",title:"Relayer",description:"The Sequence Relayer service offers a simple interface for dispatching meta-transactions on Ethereum-compatible",source:"@site/docs/06-relayer/01-overview.mdx",sourceDirName:"06-relayer",slug:"/relayer",permalink:"/relayer",draft:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/06-relayer/01-overview.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/relayer"},sidebar:"sidebar",previous:{title:"Contract metadata",permalink:"/metadata/contract-metadata"},next:{title:"Building Relaying Server with Sequence",permalink:"/relayer/building-relaying-server"}},s={},l=[{value:"Pricing &amp; Usage",id:"pricing--usage",level:2}],u={toc:l};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"relayer"},"Relayer"),(0,a.kt)("p",null,"The Sequence Relayer service offers a simple interface for dispatching meta-transactions on Ethereum-compatible\nnetworks."),(0,a.kt)("p",null,"Meta-transactions are the idea of a transaction inside of a transaction. The benefits of Sequence meta-transactions are\nthat they allow:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Gas abstraction -- whereby users can pay for network gas in a variety of tokens (ie. USDC, DAI, etc.)"),(0,a.kt)("li",{parentName:"ul"},"Sponsored gas -- projects may sponsor the gas of specific contracts to allow free gas for their users"),(0,a.kt)("li",{parentName:"ul"},"Batched transactions -- group a bunch of independent transactions and allow them to be mined as a single transaction"),(0,a.kt)("li",{parentName:"ul"},"Parallel transactions -- parallelize the dispatch of transactions in some cases"),(0,a.kt)("li",{parentName:"ul"},"Fire + forget model -- easily send transactions to the relayer, which will ensure fast delivery"),(0,a.kt)("li",{parentName:"ul"},"Optimal gas pricing for transactions"),(0,a.kt)("li",{parentName:"ul"},"Free to use / Sequence Pro gives you more reporting")),(0,a.kt)("p",null,"The best part: transactions with Sequence Relayer are compatible with ",(0,a.kt)("em",{parentName:"p"},"any")," existing/deployed Ethereum\ncontract, and thus, integrating the Sequence Relayer doesn't require any changes to your contracts or dapp."),(0,a.kt)("p",null,"The Sequence Relayer is usable by frontend dapps, or even in your backends."),(0,a.kt)("h2",{id:"pricing--usage"},"Pricing & Usage"),(0,a.kt)("p",null,"The Sequence Relayer is available for free, but if your project requires higher concurrency,\nplease contact the ",(0,a.kt)("a",{parentName:"p",href:"https://pro.sequence.xyz"},"Sequence Pro")," team."))}p.isMDXComponent=!0}}]);