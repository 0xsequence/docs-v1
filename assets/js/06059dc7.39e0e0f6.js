"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7998],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=c(n),b=r,m=d["".concat(p,".").concat(b)]||d[b]||u[b]||o;return n?a.createElement(m,l(l({ref:t},s),{},{components:n})):a.createElement(m,l({ref:t},s))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5750:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_label:"Using Web3 Onboard"},l="Using Web3-Onboard",i={unversionedId:"wallet/guides/connectors/web3-onboard",id:"wallet/guides/connectors/web3-onboard",title:"Using Web3-Onboard",description:"The Sequence wallet can be added through the Blocknative web3-onboard package.",source:"@site/docs/03-wallet/20-guides/14-connectors/4-web3-onboard.mdx",sourceDirName:"03-wallet/20-guides/14-connectors",slug:"/wallet/guides/connectors/web3-onboard",permalink:"/wallet/guides/connectors/web3-onboard",draft:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/03-wallet/20-guides/14-connectors/4-web3-onboard.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"Using Web3 Onboard"},sidebar:"sidebar",previous:{title:"Using Web3 Modal",permalink:"/wallet/guides/connectors/web3-modal"},next:{title:"Web3 React V6",permalink:"/wallet/guides/connectors/web3-react-v6"}},p={},c=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:2},{value:"network (optional)",id:"network-optional",level:3},{value:"appName (optional)",id:"appname-optional",level:3},{value:"Example",id:"example",level:2}],s={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"using-web3-onboard"},"Using Web3-Onboard"),(0,r.kt)("p",null,"The Sequence wallet can be added through the Blocknative web3-onboard package."),(0,r.kt)("admonition",{title:"Try it live :)",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Try ",(0,r.kt)("a",{parentName:"p",href:"https://0xsequence.github.io/demo-dapp-web3-onboard/"},"a live Dapp example")," using Sequence + Metamask + Wallet Connect with Web3-Onboard."),(0,r.kt)("p",{parentName:"admonition"},"Source code is available too: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/demo-dapp-web3-onboard"},"https://github.com/0xsequence/demo-dapp-web3-onboard"))),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"The Sequence module is available through npm:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @web3-onboard/sequence\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add @web3-onboard/sequence\n")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import sequenceModule from '@web3-onboard/sequence'\n\nconst sequenceOptions = {\n  network: 137,\n  appName: 'My app'\n}\n\nconst sequenceOnboard = sequenceModule({})\n\nconst onboard = Onboard({\n  wallets: [\n    sequenceOnboard,\n    ...restWallets\n  ],\n  ...restofOnboardParams\n})\n\n")),(0,r.kt)("h2",{id:"parameters"},"Parameters"),(0,r.kt)("h3",{id:"network-optional"},"network (optional)"),(0,r.kt)("p",null,"The default network that the Sequence wallet will attempt to connect to."),(0,r.kt)("h3",{id:"appname-optional"},"appName (optional)"),(0,r.kt)("p",null,"The name of the app which will show up in Sequence's prompt upon an attempt to connect. "),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"An example demo of an integration of Sequence + Web3 Onboard is available ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/demo-dapp-web3-onboard"},"here")))}u.isMDXComponent=!0}}]);