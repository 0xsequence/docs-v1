"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[829],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return f}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),g=u(t),f=i,d=g["".concat(c,".").concat(f)]||g[f]||p[f]||a;return t?r.createElement(d,o(o({ref:n},l),{},{components:t})):r.createElement(d,o({ref:n},l))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=g;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},205:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return g}});var r=t(3117),i=t(102),a=(t(7294),t(3905)),o=["components"],s={sidebar_position:5},c="Signing & Verifying Transactions",u={unversionedId:"build-with-sequence/sign_transaction",id:"build-with-sequence/sign_transaction",title:"Signing & Verifying Transactions",description:"You can ask the wallet to sign either a single transaction or multiple ones:",source:"@site/docs/build-with-sequence/5_sign_transaction.mdx",sourceDirName:"build-with-sequence",slug:"/build-with-sequence/sign_transaction",permalink:"/build-with-sequence/sign_transaction",editUrl:"https://github.com/0xsequence/docs/edit/master/docs/build-with-sequence/5_sign_transaction.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"sidebar",previous:{title:"Signing & Verifying Messages",permalink:"/build-with-sequence/sign_message"},next:{title:"Sending a Transaction",permalink:"/build-with-sequence/send_transaction"}},l=[],p={toc:l};function g(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"signing--verifying-transactions"},"Signing & Verifying Transactions"),(0,a.kt)("p",null,"You can ask the wallet to sign either a single transaction or multiple ones:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const transaction = {\n  to: recipientAddress,\n  value: '1000000000000000000'\n}\n\nconst signer = await wallet.getSigner()\nconst signature = await signer.signTransactions([transaction])\nconsole.log(signature)\n")),(0,a.kt)("p",null,"If you want to override the default network, you can also customize that as well:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const signature = await signer.signTransactions([transaction], 137 /* Polygon */)\nconsole.log(signature)\n")))}g.isMDXComponent=!0}}]);