"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[723],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=a.createContext({}),s=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),h=s(n),d=o,m=h["".concat(i,".").concat(d)]||h[d]||p[d]||c;return n?a.createElement(m,l(l({ref:t},u),{},{components:n})):a.createElement(m,l({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,l=new Array(c);l[0]=h;var r={};for(var i in t)hasOwnProperty.call(t,i)&&(r[i]=t[i]);r.originalType=e,r.mdxType="string"==typeof e?e:o,l[1]=r;for(var s=2;s<c;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5930:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return r},contentTitle:function(){return i},metadata:function(){return s},toc:function(){return u},default:function(){return h}});var a=n(3117),o=n(102),c=(n(7294),n(3905)),l=["components"],r={},i="Connect Wallet",s={unversionedId:"build-with-sequence/connect-wallet",id:"build-with-sequence/connect-wallet",title:"Connect Wallet",description:"Sequence is a very flexible wallet which allow users multiple ways to connect / access their wallet. This includes:",source:"@site/docs/build-with-sequence/02-connect-wallet.mdx",sourceDirName:"build-with-sequence",slug:"/build-with-sequence/connect-wallet",permalink:"/build-with-sequence/connect-wallet",editUrl:"https://github.com/0xsequence/docs/edit/master/docs/build-with-sequence/02-connect-wallet.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"sidebar",previous:{title:"Installation",permalink:"/build-with-sequence/installation"},next:{title:"Get Wallet Account Address",permalink:"/build-with-sequence/get-address"}},u=[{value:"Connecting your dapp with <code>0xsequence</code>",id:"connecting-your-dapp-with-0xsequence",children:[],level:2},{value:"Connecting your dapp with <code>web3.js</code> or <code>ethers.js</code>",id:"connecting-your-dapp-with-web3js-or-ethersjs",children:[],level:2},{value:"Connecting via <code>WalletConnect</code>",id:"connecting-via-walletconnect",children:[],level:2}],p={toc:u};function h(e){var t=e.components,r=(0,o.Z)(e,l);return(0,c.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"connect-wallet"},"Connect Wallet"),(0,c.kt)("p",null,"Sequence is a very flexible wallet which allow users multiple ways to connect / access their wallet. This includes:"),(0,c.kt)("ol",null,(0,c.kt)("li",{parentName:"ol"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"On-demand Ethereum web wallet for new users")," via ",(0,c.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/0xsequence"},"0xsequence")," npm package + ",(0,c.kt)("a",{parentName:"p",href:"https://sequence.app"},"https://sequence.app")," -- this option allows\ndevelopers to offer users an on-demand Web3 wallet. No user install required -- any browser will ",(0,c.kt)("em",{parentName:"p"},"just work"),", and users\ncan on-boarding with a familiar Web2 experience. Think of it like ",(0,c.kt)("em",{parentName:"p"},"Paypal / Stripe but for Web3"),". ")),(0,c.kt)("li",{parentName:"ol"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"Surf all of Web3")," via ",(0,c.kt)("a",{parentName:"p",href:"https://chrome.google.com/webstore/detail/sequence-wallet/ocmccklecaalljlflmclidjeclpcpdim?hl=en"},"Sequence Wallet Chrome Extension")," -- users\nwho have the Sequence Wallet Chrome Extension installed are able to access any Ethereum-compatible Dapp on the Web :) Just like how MetaMask works,\nbut of course with a bunch of the ",(0,c.kt)("a",{parentName:"p",href:"/introduction/benefits-of-sequence"},"benefits of Sequence"),".")),(0,c.kt)("li",{parentName:"ol"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"Mobile phone access")," via ",(0,c.kt)("a",{parentName:"p",href:"https://walletconnect.com/"},"WalletConnect")," support within Sequence Wallet -- users are able to communicate with their wallets remotely\nvia the awesome Wallet Connect protocol. This is an excellent option if using Sequence Wallet from your mobile phone and want to connect\nyour wallet to a desktop dapp."))),(0,c.kt)("p",null,"Sequence Wallet is built on Web Browser (W3C) and Ethereum Web3 standards -- and is available everywhere that a modern browser is able to run.\nWe've carefully designed the wallet for simple on-boarding, while maintaining security for users, and allowing users to progressively\nincrease the level of their security through additional keys and measures."),(0,c.kt)("p",null,"This means, that if you've developed a dapp to work with MetaMask, then Sequence will work too without any changes. If you're\nusing web3.js or ethers.js, Sequence will just work too. This is the beauty of interoperability on web3 :D "),(0,c.kt)("h2",{id:"connecting-your-dapp-with-0xsequence"},"Connecting your dapp with ",(0,c.kt)("inlineCode",{parentName:"h2"},"0xsequence")),(0,c.kt)("p",null,"Your dapp can connect to your user's wallet by first instantiating the Wallet provider:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"import { sequence } from '0xsequence'\n\n// This assumes your dapp runs on Ethereum mainnet\nconst wallet = new sequence.Wallet()\n\n// If your dapp runs on a different EVM-compatible blockchain, you can specify its name as the argument\n// const wallet = new sequence.Wallet('polygon')\n")),(0,c.kt)("p",null,"Once you have the instance, you can connect to the wallet:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"const connectDetails = await wallet.connect({\n  app: 'Your Dapp name',\n  authorize: true\n})\n\nconsole.log('user accepted connect?', connectDetails.connected)\nconsole.log('users signed connect proof to valid their account address:', connectDetails.proof)\n")),(0,c.kt)("p",null,(0,c.kt)("img",{alt:"Sequence on-demand sign in",src:n(1634).Z})),(0,c.kt)("p",null,(0,c.kt)("img",{alt:"Sequence on-demand sign in, connect",src:n(1350).Z})),(0,c.kt)("h2",{id:"connecting-your-dapp-with-web3js-or-ethersjs"},"Connecting your dapp with ",(0,c.kt)("inlineCode",{parentName:"h2"},"web3.js")," or ",(0,c.kt)("inlineCode",{parentName:"h2"},"ethers.js")),(0,c.kt)("p",null,"This requires users to use the Sequence Chrome Extension or Wallet Connect. This is identical to connecting with MetaMask."),(0,c.kt)("p",null,"NOTE: to offer the on-demand / no-install Web Wallet to your users, please see section above on connecting with ",(0,c.kt)("inlineCode",{parentName:"p"},"0xsequence")," npm package.\nAlso note, that you can use Sequence 0xsequence in combination with Metamask and web3.js and ethers.js."),(0,c.kt)("p",null,"Finally, just FYI, 0xsequence is actually built on ethers.js :)"),(0,c.kt)("hr",null),(0,c.kt)("p",null,"Sequence Chrome Extension: ",(0,c.kt)("a",{parentName:"p",href:"https://chrome.google.com/webstore/detail/sequence-wallet/ocmccklecaalljlflmclidjeclpcpdim?hl=en"},"Install")),(0,c.kt)("p",null,(0,c.kt)("img",{alt:"Sequence Chrome Extension",src:n(7745).Z})),(0,c.kt)("p",null,(0,c.kt)("img",{alt:"Sequence Chrome Extension",src:n(9612).Z})),(0,c.kt)("h2",{id:"connecting-via-walletconnect"},"Connecting via ",(0,c.kt)("inlineCode",{parentName:"h2"},"WalletConnect")),(0,c.kt)("p",null,"Sequence already supports connecting to dapps via ",(0,c.kt)("a",{parentName:"p",href:"https://walletconnect.com"},"WalletConnect"),".\nIf your dapp already supports WalletConnect, and you don't need Sequence-specific functionality, nothing more needs to be done.\nFrom the user's perspective, the WalletConnect flow behaves as follows."),(0,c.kt)("p",null,"Taking ",(0,c.kt)("a",{parentName:"p",href:"https://app.uniswap.org"},"Uniswap")," as an example, the user is prompted to connect their wallet using one of multiple possible protocols."),(0,c.kt)("img",{src:"/img/walletconnect/connect-wallet.png"}),(0,c.kt)("p",null,"The user selects the WalletConnect option."),(0,c.kt)("img",{src:"/img/walletconnect/select-walletconnect.png"}),(0,c.kt)("p",null,"A QR code is displayed, which can be scanned by Sequence.\nAlternatively, the user can also choose to copy the connection details via their OS clipboard."),(0,c.kt)("img",{src:"/img/walletconnect/qr-code.png"}),(0,c.kt)("p",null,'Back in the Sequence interface, the user chooses "Scan".'),(0,c.kt)("img",{src:"/img/walletconnect/scan.png"}),(0,c.kt)("p",null,"The QR code from the dapp is scanned.\nAlternatively, the code is pasted from the OS clipboard if the user chose that previously."),(0,c.kt)("img",{src:"/img/walletconnect/scan-qr-code.png"}),(0,c.kt)("p",null,"The user confirms the connection request."),(0,c.kt)("img",{src:"/img/walletconnect/confirm.png"}),(0,c.kt)("p",null,"The connection succeeded, and the dapp is updated to reflect that."),(0,c.kt)("img",{src:"/img/walletconnect/success.png"}),(0,c.kt)("p",null,"While connected, the dapp is able to make signing requests to Sequence.\nSequence will always prompt for confirmation from the user for any activity initiated by the dapp."),(0,c.kt)("img",{src:"/img/walletconnect/activity.png"}),(0,c.kt)("p",null,"Once the user has finished using the dapp, they can disconnect the wallet via the session menu."),(0,c.kt)("img",{src:"/img/walletconnect/disconnect.png"}))}h.isMDXComponent=!0},9612:function(e,t,n){t.Z=n.p+"assets/images/seq-chrome-ext-uniswap-09179863c28801bf30793f60ba6523e2.png"},7745:function(e,t,n){t.Z=n.p+"assets/images/seq-chrome-store-9334f18a83d3bfca818e3d3862d0156c.png"},1350:function(e,t,n){t.Z=n.p+"assets/images/sign-in-connect-d814bce59b1e77007fd8a492a8ad5958.png"},1634:function(e,t,n){t.Z=n.p+"assets/images/sign-in-fresh-e2c564971c5e89a4fd7c3ba03ca69ff0.png"}}]);