"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7402],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),s=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(a),m=r,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||l;return a?n.createElement(f,o(o({ref:t},p),{},{components:a})):n.createElement(f,o({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},85463:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var n=a(87462),r=(a(67294),a(3905));const l={},o="Wallet Factory",i={unversionedId:"wallet-contracts/wallet-factory",id:"wallet-contracts/wallet-factory",title:"Wallet Factory",description:'Sequence Wallets are created using the Factory contract, when called it creates child MinimalUpgradeableProxies contracts, which are in essense the "boot" code of all Sequence wallets.',source:"@site/docs/wallet-contracts/03-wallet-factory.mdx",sourceDirName:"wallet-contracts",slug:"/wallet-contracts/wallet-factory",permalink:"/wallet-contracts/wallet-factory",draft:!1,editUrl:"https://github.com/0xsequence/docs/edit/master/docs/wallet-contracts/03-wallet-factory.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"sidebar",previous:{title:"Universal Deployer",permalink:"/wallet-contracts/universal-deployer"},next:{title:"Wallet Configuration",permalink:"/wallet-contracts/wallet-configuration"}},c={},s=[{value:"Factory API",id:"factory-api",level:2},{value:"deploy",id:"deploy",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Return Values:",id:"return-values",level:4},{value:"Counter factual addresses",id:"counter-factual-addresses",level:2}],p={toc:s};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"wallet-factory"},"Wallet Factory"),(0,r.kt)("p",null,"Sequence Wallets are created using the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/wallet-contracts/blob/b084e731315582f6494bc169292bb89f379815ea/src/contracts/Factory.sol"},"Factory")," contract, when called it creates child ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/0xsequence/wallet-contracts/blob/b084e731315582f6494bc169292bb89f379815ea/src/contracts/Wallet.sol"},"MinimalUpgradeableProxies"),' contracts, which are in essense the "boot" code of all Sequence wallets.'),(0,r.kt)("h2",{id:"factory-api"},"Factory API"),(0,r.kt)("h3",{id:"deploy"},"deploy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function deploy(\n    address _mainModule,\n    bytes32 _salt\n  ) public payable returns (address _contract)\n")),(0,r.kt)("p",null,"Creates a child MinimalUpgradeableProxy using ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1014"},"CREATE2"),", the proxy initially points to the provided ",(0,r.kt)("inlineCode",{parentName:"p"},"_mainModule"),".\nNo initialize code is executed."),(0,r.kt)("h4",{id:"parameters"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_mainModule"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Initial implementation for the new proxy contract, expected to point to a valid Sequence wallet implementation with support for counter-factual initialization.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_salt"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:null},"Arbitrary value to be used as ",(0,r.kt)("inlineCode",{parentName:"td"},"create2")," salt. Sequence's ",(0,r.kt)("inlineCode",{parentName:"td"},"mainModule")," uses the salt to obtain a hash with the initial configuration for the wallet (See ",(0,r.kt)("a",{parentName:"td",href:"#"},"ImageHash"),").")))),(0,r.kt)("h4",{id:"return-values"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_contract"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the created proxy contract.")))),(0,r.kt)("admonition",{title:"Unsanitized input",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The Factory contract ",(0,r.kt)("strong",{parentName:"p"},"does not")," check if the provided ",(0,r.kt)("inlineCode",{parentName:"p"},"_mainModule")," is a valid Sequence wallet implementation, or if ",(0,r.kt)("inlineCode",{parentName:"p"},"_salt")," is a valid Sequence configuration."),(0,r.kt)("p",{parentName:"admonition"},"Using invalid parameters will result on a proxy contract that ",(0,r.kt)("strong",{parentName:"p"},"may not")," be usable, and could result in loss of funds.")),(0,r.kt)("h2",{id:"counter-factual-addresses"},"Counter factual addresses"),(0,r.kt)("p",null,"Sequence wallets are counter-factual by design, this means that the wallet's address can be known before the wallet is deployed; any two combinations of the ",(0,r.kt)("inlineCode",{parentName:"p"},"mainModule")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"salt")," values will result in the same wallet address."),(0,r.kt)("p",null,"This property alongside the use of ",(0,r.kt)("a",{parentName:"p",href:"/wallet-contracts/universal-deployer"},"UniversalDeployer")," is the reason why Sequence wallets can obtain the same address on multiple chains."),(0,r.kt)("admonition",{title:"Gas-free wallet creation",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Sequence wallets are ",(0,r.kt)("strong",{parentName:"p"},"100% counterfactual"),", meaning that funds can be safely transferred to the wallet's address without the need for calling the ",(0,r.kt)("inlineCode",{parentName:"p"},"deploy")," function."),(0,r.kt)("p",{parentName:"admonition"},"Deploying the wallet is only required before the first transaction is sent ",(0,r.kt)("strong",{parentName:"p"},"from")," the wallet.")))}d.isMDXComponent=!0}}]);